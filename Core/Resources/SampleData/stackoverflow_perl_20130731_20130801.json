{"DataSource":"stackoverflow.com","CommentId":"26360177","Text":"And I got votes to boot, but this post is a duplicate of stackoverflow.com/questions/18019278/using-same-hash-why-is-data-not-overwritten&zwnj;&#8203;-after-hash-ref-assigned/18022667#18022667 and I&#39;ve flagged it asking for moderator input.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26349770","Text":"Yes. i wondered why returned pattern didn&#39;t include some substrings.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26324143","Text":"it&#39;s not!It is in double quotes.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26320897","Text":"You could use <code>my ($key, $v, $ma, @vals) = split;</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26316642","Text":"amon &amp; ikegami improve the heck out of the answer &amp; I get the points.  It feels somehow dishonest.....","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26315892","Text":"I&#39;ve updated the code to where it compiles now. The XML is incorrect that that&#39;s my issue. The solution from mirod below works like a charm.THANKS!! but as far as escaping the back slashes goes, I thought I would not have to since the string is within single quotes.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26313867","Text":"what do I do then? can you please elaborate???","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26311048","Text":"Re &quot;My code certainly does so&quot;, You seem to be missing a die. Your code doesn&#39;t make sure the arrays are the same, it merely says whether they are or not.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26311035","Text":"@mob I think fixing that error you caught fixed my problem. Thanks.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26310977","Text":"@KeithThompson My mistake. I will try to be more clear next time. I don&#39;t have a lot of experience with using cron. I think the issue was a that I screwed up the crontab line. I just wish it would have thrown an error instead just not doing anything.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26308365","Text":"Thank you. You should buy it. I have a full refund policy within 30 days, no questions asked. I can also confess to a certain fondness for the Text::CSV module, which makes me use it whenever I can.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26307636","Text":"Yeah I think I almost buy that! +1 anyway :)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26307494","Text":"Yes, sometimes people say things which are not necessarily true, but the basic premise must be that if parsing CSV is asked for, parsing CSV is how its handled. If nothing else, for other people reading the question afterwards. Mind you, in that particular case, a CSV parser was not strictly required, but data and/or users may vary over time.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26307040","Text":"In my experience, when people say they have a CSV file it is to be taken with a pinch of salt :) The data in the other question, when you recommended using a module, looked very much like this. That is why I am confused over your different approach.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26304180","Text":"He did not specify that it was a csv file. If it is, you could use it.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26303288","Text":"So why not use <code>Text::CSV</code> in this case?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26302313","Text":"You really don&#39;t want to do that. What you want is a 2-dimensional array.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26302292","Text":"Downvoted. Recommending symbolic references for this is a terrible idea.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26300789","Text":"Then you have chosen the wrong tool.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26300431","Text":"Well I think you will have to send more details about your server. Do you have access to apache configuration? What server is it? Maybe this is a question to your server&#39;s administrators if perl mod is enabled? chmod +x is not returning anything. It adds executable flag to your file.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26300412","Text":"use some of <code>DBM</code> storages with locking feature, ie. <a href=\"http://search.cpan.org/~rkinyon/DBM-Deep-2.0009/lib/DBM/Deep.pod#LOCKING\" rel=\"nofollow\">search.cpan.org/~rkinyon/DBM-Deep-2.0009/lib/DBM/&hellip;</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26300084","Text":"@daxim no, it doesn&#39;t. <a href=\"http://codegolf.stackexchange.com\">Programming Puzzles & Code Golf</a> is for questions that are <i>fun</i> and <i>challenging</i> to solve or golf. Language-agnostic questions are the most typical ones there. This isn&#39;t fun to solve or language-agnostic. It might be reworded to fit the scope, but it won&#39;t be a good question there. For one, the asker shouldn&#39;t reveal his solution right away if there&#39;s a decent chance no shorter solution exists. It takes the fun away.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26299782","Text":"It&#39;s described in detail here: <a href=\"http://www.perlmonks.org/?node_id=613280\" rel=\"nofollow\">Using regex in Map function</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26296203","Text":"Either your perl script and your xml have errors. Fix them if you wait for better answers.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26295371","Text":"The <code>local $_ = $_;</code> is necessary because I didnt want to change @arr2!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26294466","Text":"What&#39;s <code>local $_ = $_; </code> for? I don&#39;t think it&#39;s necessary","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26294397","Text":"what a neat trick! im still debating whether to go with this route because this would pass if arr2 &quot;just contains&quot; arr1  ie arr2 can have whats in arr1 AND more.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26293550","Text":"I haven&#39;t used local::lib before, but reading the CPAN page, there are several different steps to the bootstrap mode.  It seems like you&#39;ve combined them in your 2nd comment here.  Can you try them separately and share the results of each?  Might be better to edit your question with the commands and results, as you don&#39;t get any formatting options to make that readable here in a Comment.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291930","Text":"Thanks for the support, fellas :rolleyes: As I said, I already tried code golf.  They said it&#39;s off topic for their site as well.  Guilty until proven innocent, huh.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291704","Text":"@ikegami - Nice explanation!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291629","Text":"@Ted Hopp, I&#39;ve added an explanation for <code>undef</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291317","Text":"@klynch: If you had the command in the root crontab, it may have worked as root. You never said whether that was root&#39;s crontab or not. (If <code>su</code> is invoked by a non-root user, I&#39;d expect it to prompt for a password.)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291272","Text":"@JonathanLeffler: The man page on Linux says it&#39;s <code>su -c command username</code>; the synopsis is <code>su &#91;options&#93; &#91;username&#93;</code> and <code>-c COMMAND</code> is one of the options. But <code>su username -c command</code> also works for me.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291263","Text":"My first suggested solution always works. For my second solution, you are somewhat correct. I correctly compare the length of both arrays in scalar context and correctly compare a sufficient number of elements to determine if they are not identical. However, the shortcut of only comparing <code>$i</code> to <code>@array1</code> assumes there is data in <code>@array1</code>. I will update to handle the case of <code>@array1 == 0</code>. Note that the OP said &quot;<code>@array1</code> has data&quot; so in fact, both of my solutions are correct. ;)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26291030","Text":"Please note that &quot;Name&quot; cannot be assumed to be a literal value any more than &quot;blah1&quot; and &quot;blah2.&quot; Solutions assuming otherwise are almost certainly wrong.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290994","Text":"@ikegami And thank you, but no, I don&#39;t need any help with this. I&#39;ve been a perl hacker and package writer for ~15 years, expert in almost all versions of it, even MacPerl for Mac OS 8. I am trying to be helpful to the community, which includes people who can&#39;t understand how to adapt your code with die into logic that works within their program. (And I suspect with about 100% certainty that Name is no more a literal value than blah1 &amp; blah2.)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290984","Text":"@ikegami Your updated code looks like it meets the OP&#39;s stated requirements. My code certainly does so (I always test my solutions), so feel free to remove your false comment that my code does not.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290796","Text":"It&#39;s an example, just put your own sorting rules and comparisons.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290689","Text":"@Joseph Myers, Adapted to ignore the &quot;Name&quot; part.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290662","Text":"@Joseph Myers, Re &quot; If I wanted to use it in a program [...], I would have to rewrite it first.&quot; I wrote it for the OP, not you. As I already explained, your changes would not meet the OP&#39;s stated requirements. If you have different requirements than the OP and you need some help adapting the code, let me know.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26290319","Text":"You ought to check out <code>push</code>, <code>pop</code>, <a href=\"http://perldoc.perl.org/functions/shift.html\" rel=\"nofollow\"><code>shift</code></a> and <code>unshift</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289831","Text":"@Matt you&#39;re right!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289712","Text":"Isn&#39;t it usually <code>su oracle -c &#39;...&#39;</code>?  The synopsis on Mac OS X is ` su [-] [-flm] [login [args]]<code>, where </code>oracle` is the login and <code>-c &#39;...&#39;</code> are the arguments to the shell.  The basic analysis of the problem is correct — but I don&#39;t think the suggested <code>su -c oracle -c &#39;...&#39;</code> remedy is correct (it should not use the first <code>-c</code>).","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289635","Text":"I think you open the file before you call <code>flock</code> since you need to pass an filehandle to <code>flock</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289601","Text":"@ealeon Does every element of array2 actually say Name: just like that? I am assuming that Name is a changing string that represents someone&#39;s name, not a literal string &quot;Name.&quot; I thought that the first responder would update their answer to fix this issue, but there have been no changes, so I am providing my own answer for you.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289563","Text":"@marderh Thanks, the way I thought.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289551","Text":"@ikegami I totally understand your code and what to do to make it work within a program, and probably the OP does too. But the fact is, that it isn&#39;t a self-sufficient answer. If I wanted to use it in a program, or even to run it and time it to test its efficiency, I would have to rewrite it first. I thought you were going for the first post and would complete your answer afterwards, but since you did not I respectfully submitted my own answer. Most importantly, your answer actually appears wrong to me. I do not think that &quot;Name: creating&quot; is a static string, but that Name may be variable.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289502","Text":"Nice digging through the docs. Doesn&#39;t explain <code>(undef, 1)</code>, though. (Is throwing away <code>undef</code> considered not throwing away anything?)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289375","Text":"Basically you want to lock a file (flock), open it (open), read a number from it, increment the number, write it back to the file, close it and release the lock.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289307","Text":"Nothing came then tried to install module via CPAN\n\nError \n You do not have permissions to install into /usr/lib64/perl5/site_perl/5.8.8/x86_64-linux-thread-multi at /usr/lib/perl5/5.8.8/ExtUtils/Install.pm line 114.\nmkdir /usr/lib64/perl5/site_perl/5.8.8/x86_64-linux-thread-multi/auto/Net: Permission denied at /usr/lib/perl5/5.8.8/ExtUtils/Install.pm line 176\nmake: *** [pure_site_install] Error 13\n  /usr/bin/make install  -- NOT OK\n    You may have to su to root to install the package","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289252","Text":"perl Makefile.PL --bootstrap\nmake test &amp;&amp; make install (warning\necho &#39;eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)&#39; &gt;&gt;~/.bashrc","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289190","Text":"This is fantastic. Thank you so much for the reply! It&#39;s pointed me in the right direction. Really appreciated.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289178","Text":"&quot;Sequence&quot; is usually longer than one number.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26289092","Text":"I was just going to say this too. It says under <code>Useless use of %s in void context</code> that <code>This warning will not be issued for numerical constants equal to 0 or 1</code> <a href=\"http://perldoc.perl.org/perldiag.html#Useless-use-of-%s-in-void-context\" rel=\"nofollow\">perldoc.perl.org/&hellip;</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288899","Text":"Remove the <code>flush</code> or replace it with <code>purge</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288846","Text":"perl Makefile.PL --bootstrap","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288705","Text":"@ikegami but $count is a number, I just using that as an operand in a concatenation string operation. I am sorry you don&#39;t like it, but it works and nothing is wrong with it.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288587","Text":"Yes but I don&#39;t want to run them. I want to SKIP them","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288512","Text":"Your source units will be very limited, perhaps a score of possibilities.  Extracting it with a regex would be trivial.  After multiplication you have a value that is in, above or below your desired range (1 to 1000 or 1024).  Scale as necessary.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288507","Text":"@Joseph Myers, The OP didn&#39;t specify what he wants done, but 1) he did imply it&#39;s an error if they are different. (&quot;What is the best route to <b>make sure</b> that all elements ...&quot;, emphasis mine), and 2) it&#39;s very easy to identify what needs to be changed if it needs to be changed (e.g. <code>s&#47;die&#47;return 0&#47;</code>).","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288453","Text":"I wish you would remove the irrelevant information about the local computer. Concentrate on the remote one. How did you bootstrap? What happened then? Any error messages? What are the contents of the <code>.bashrc</code> file there?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288402","Text":"Why would his program want to die (or have to trap the die) just because the number of elements in the two arrays are not the same or if one of the elements doesn&#39;t match? @Qtax The question seems to say that the data are in order (both arrays blah1 through blah100), and whether they are or aren&#39;t, sorting will only put them in the wrong order until after the &#39;Name: creating &#39; prefix is removed.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288324","Text":"@ealeon I would recommend regexp - you won&#39;t need to loop through the array twice: 1 for creating the trimmed version, and second in array_diff for comparison.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288291","Text":"@Qtax, True, although there are solutions that scale better than sorting. For 100 elements, sorting would probably be faster despite the higher &quot;complexity&quot;.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288280","Text":"Are the arrays sorted as you seem to indicate?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288180","Text":"If they are sorted. Otherwise can just sort them.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26288076","Text":"@user4035 ah I see. well which way would be faster? using regexp or just manipulate array2 so that it gets rid of Name: creating which then I can take advantage of array_diff?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287961","Text":"@ealeon Unfurtunately, there is no other way, then comparing them element by element, using a regexp. And checking, that their lengths are equal.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287904","Text":"@AdrainHHH Boolean of &quot;all&quot; (not just a few) of the array1 data is in array2","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287871","Text":"no control on the creation of those arrays. @user4035","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287869","Text":"What result do you want? Is a boolean meaning &quot;matches&quot; or &quot;not matching&quot; enough, or what else is wanted?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287755","Text":"Do you have any control over creating of these arrays? Or you get them from somewhere.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26287131","Text":"What&#39;s the behavior you&#39;re observing?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286943","Text":"@Rooster That means you didn&#39;t have <code>use strict; use warnings</code> activated. Otherwise you would have gotten a warning “Reference found where even-sized list expected at line ...”.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286809","Text":"nevermind.  it was because in my original code not posted I was declaring my hash as %my_hash = {}","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286706","Text":"thanks for the help.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286594","Text":"I don&#39;t think you&#39;re quite understanding my question. I have a value where the units are unknown until runtime (could be kB, GiB, TB, etc). This value is then multiplied by an integer that is also unknown until runtime. How do you figure out what units should be used to express the result as succinctly as possible (e.g. 9.8GB instead of 10,000MB)? There are some simple solutions on <a href=\"http://www.perlmonks.org/?node_id=378538\" rel=\"nofollow\">PerlMonks</a> but they do not take into account things like megabytes vs. mebibytes. Hence my question.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286365","Text":"Its working now, thanks.  Any idea why this foreach is adding one extra element to the hash with a key of hash =&gt; undef?  There are only 2 files currently, and the loop only dumps the variables twice so it doesn&#39;t make sense to me.  I used your first suggestion and got rid of the if statements.  Actually, this happens in both of the methods.  I can filter it but I&#39;d rather figure why it happens in the first place.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26286093","Text":"lol... i did and it didn&#39;t work","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26285936","Text":"@ThisSuitIsBlackNot: Updated","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26285858","Text":"Try it and see.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26285681","Text":"It seems to be working now but I&#39;m not sure why. We are using the oracle crontab but I had the su oracle because that is how the other jobs were created before I started working here.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26285275","Text":"Sorry, I should have been more clear in my question...I will not always be converting from MB, and do not always want to end up with TB. I want my result string to be as short as possible, which means using the appropriate suffix (GB, TB, what have you).","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284863","Text":"Given the syntax you&#39;ve specified, you are not switching to the <code>oracle</code> user to run the later stuff. <code>su oracle</code> may work without a password, but the rest of the stuff after the first <code>;</code> doesn&#39;t run until after <code>su</code> has exited and you are back to running as whoever is the owner of the <code>crontab</code>. You want to <code>su oracle -c &#39;other stuff&#39;</code> to actually run the other stuff as <code>oracle</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284781","Text":"@KeithThompson Tried that too but thanks. That is why we are so frustrated because it makes no sense.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284731","Text":"Perhaps you need <code>su - oracle</code> rather than <code>su oracle</code> (<code>man su</code> for details).  But why not put this in the <code>oracle</code> account&#39;s crontab?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284685","Text":"@KeithThompson if you notice we su to the user and force it to use the profile so all the environment variables should be available.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284652","Text":"Cron jobs run with a restricted set of environment variables. It&#39;s likely your Perl script depends on some environment variables that you have in your interactive shell.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284492","Text":"I&#39;m sorry, I missed the cleverness of your code (doing arithmetic on something that isn&#39;t a number). So <code>$count</code> is not a good name either. Really confusing approach.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284454","Text":"output of perl -c option was ./move_em_bkup.pl syntax OK @collapsar","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284425","Text":"@collapsar I have tried calling perl directly I even used the complete path to the perl executable but it did nothing for me but I will try with the -c option and see if that makes a difference.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284413","Text":"ah makes sense @amon","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284377","Text":"@mob the extra ouput was put in by a coworker and I&#39;m not sure why he did that but yes I meant &amp; instead of $","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26353247","Text":"That&#39;s definitely NOT happening.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284187","Text":"try calling perl directly: <code>perl -c move_em_bkup.pl &gt;&gt;&#47;tmp&#47;plcall.dbg</code>. this will try to compile your script and print any error messages to the given output file. if the result is something like <code>Syntax OK</code>, you may try to actually execute your script in the same way (drop the <code>-c</code> option).","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284138","Text":"Thanks for your answer. It works perfectly for me.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284092","Text":"Did you mean <code>2&gt;&amp;1</code> instead of <code>2&gt;$1</code>?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26284077","Text":"You are redirecting standard output to two different places. What do you expect to happen?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283996","Text":"I have tried specifying perl path in the cron job and that makes no difference.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283905","Text":"That thing passed everything, sorry for the wrong question","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283888","Text":"thanks amon i used ur answer","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283874","Text":"sorry i made a stupid mistake, it worked","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283860","Text":"sorry I didnt know you could do that, works perfectly though, thank you for the extra help.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283676","Text":"Also, it doesn&#39;t need regex arguments, wildcards will do.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283654","Text":"Interesting...never see &quot;condition or condition or condition&quot; before!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283401","Text":"please see the above edits","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26283245","Text":"It might be better to use the <code>\\w</code> charclass to match letters, and to anchor at word boundaries (<code>\\b</code>): <code>&#47;\\b(\\w*du\\w*)\\b&#47;</code>. There is also no need here for lazy quantifiers. Also, if your regex matches, <code>$1</code> <i>will</i> be defined (the shortest possible match would contain <code>du</code>). → <code>say $1 if $a =~ &#47;\\b(\\w*du\\w*)\\b&#47;</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26353248","Text":"This is the answer I was seeking <code>There is one hash at one memory location, and another hash at another. As you modify %th2, it changes.</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26353246","Text":"By copying I mean another %th2 is being created behind the scenes once it&#39;s been altered. Hence, it&#39;s at another memory location.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26282899","Text":"Ummm....no, <code>&#47;\\du+&#47;</code> checks for a digit followed by one or more <code>u</code>s.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26282849","Text":"Does that really match your string?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26282701","Text":"The code must return &#39;err&#39; only if argument is not defined, or is not &#39;one&#39; or &#39;two&#39;. Otherwise no output at all.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26282444","Text":"Could you make clear what expected behaviour is? Are all true values allowed except <code>one</code> and <code>two</code>? Or are <i>only</i> <code>one</code> or <code>two</code> allowed?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26282422","Text":"Yeah, that is simple solution I can see as well. I am looking for some &#39;smart&#39; solution that would not waste resources...","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26281348","Text":"<code>grep</code> in scalar context counts the number of matches in the given list. Some kind of loop is neccessary to look at each element in <code>@animals</code>. In <code>grep EXPR, LIST</code>, the EXPR is executed for each element, with <code>$_</code> (default variable) set to each element.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26281198","Text":"@amon looks like grep does not even in there since / / automatically looks to match it. i wonder why the person who wrote the code added grep...","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26281185","Text":"Short answer is: ① no, it means <i>any</i> string (any base 10 integer would be <code>&#91;0-9&#93;+</code>), ② <code>&#47;</code> is the regex delimiter. Backslashes escape regex operators (“metacharacters”). <code>$</code> is such an operator, and matches an end of line. ③ Depends on the input strings. It won&#39;t match if the input contains parens.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280968","Text":"read the regex tutorial <a href=\"http://perldoc.perl.org/perlretut.html\" rel=\"nofollow\">perlretut</a>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280905","Text":"<code>chmod +x</code> does not return anything on the command line. I was not able to find the log files. I am not the root user. The script runs without any syntax errors. For the html page to be accessible via browser, I need to put the html page in a certain folder in unix which is not inside the <code>Apache</code>. i tried placing the <code>cgi</code> script under <code>cgi-bin</code> and also with the html page. There is no change.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280823","Text":"@ealeon Your understanding is correct. The assignment operator <code>=</code> copies the value (of the string). If you want to explicitly bool-ify any value, use double negation: <code>my $bool = !! $foo</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280618","Text":"this might be irrelevant but then if i do $pass = $message then does $pass save the boolean value of $message or the actual string? logically speaking, i am guessing it would just save the text of $message and when ok ($pass, $test) is executed, $pass would be treated as boolean ie true if not empty.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280354","Text":"<code>IO::Socket</code> is just an OOP wrapper around the builtin socket functions in Perl, at the <a href=\"http://en.wikipedia.org/wiki/Transport_layer\" rel=\"nofollow\">OSI-Transport layer</a> while it looks like you are interested in the <a href=\"http://en.wikipedia.org/wiki/Network_layer\" rel=\"nofollow\">network layer</a>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26280031","Text":"In addition to the answers you can search for &quot;boolean context&quot;. <code>perldoc perldata</code> has some info about it...","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26279819","Text":"related: <a href=\"http://stackoverflow.com/questions/1134962/why-does-1-give-me-nothing-in-perl\" title=\"why does 1 give me nothing in perl\">stackoverflow.com/questions/1134962/&hellip;</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26279280","Text":"@Dan Not really. OP intuitively assumed there might be “something like” symrefs. This does not mean OP really wants to use them. It is much more likely he didn’t know about AoAs and real references. You might want to read about <a href=\"http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem\">XY Problems</a>, where the question asks about a <i>solution</i> which in reality is suboptimal.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26279252","Text":"@Dan Oops! Sorry. The heat got to me.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26278500","Text":"@ikegami I don&#39;t see your point. You change the variable name from $c to $count, which is ok, but why you change it to increment instead of decrement? And dont see any problem with any number of lines, unless you are talking about ... be interpreted literally.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26278362","Text":"Please accept my answer then :) Or toolic&#39;s","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26278361","Text":"TIMTOWTDI, hah :)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26278360","Text":"But that&#39;s what the questions was about!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26278181","Text":"I have made some changes to the part, thanks to your input @ikegami, and it works fine now. Thank you also for pointing me to the bad usage of &#39;our&#39; in my program.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277947","Text":"@Dan I cannot leave a question that primarily recommends symbolic references undownvoted.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277788","Text":"So, in this question, everybody gets a downvote?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277537","Text":"No, mirod, that&#39;s completely different. <code>$linearray-&gt;&#91;$lineno&#93;</code> would be if <code>$linearray</code> itself was an arrayref. The equivalent to that would be <code>$$linearray&#91;$lineno&#93;</code> I think. Or maybe <code>${$linearray}&#91;$lineno&#93;</code>, which is pretty hairy. In this case I&#39;m suggesting that he use an array of arrays, where either <code>linearray</code> is an array, you access the subarrays with <code>@{$linearray&#91;$line&#93;}</code>, and you access the elements with <code>$linearray&#91;$line&#93;-&gt;&#91;$elem&#93;</code>, or <code>linearray</code> is an arrayref, you access the subarrays with <code>@{$linearray-&gt;&#91;$line&#93;}</code>, and you access the elements with <code>$linearray-&gt;&#91;$line&#93;-&gt;&#91;$elem&#93;</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277293","Text":"yes but this is in Asp.net i want that the code in Asp.net to be in perl and i don&#39;t know hoW Asp.net works :/","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277202","Text":"<code>@{$linearray&#91;$lineno&#93;}</code> can also be written <code>$linearray-&gt;&#91;$lineno&#93;</code>, which IMHO looks much better.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26277191","Text":"@BluGeni ??? Just update that field in the data structure: <code>$row-&gt;{image} = $encoded</code>. Is this really that complicated?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276992","Text":"Yeah it&#39;s been a while and I forgot that perl didn&#39;t have native n-dimensional arrays. What he said.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276936","Text":"Would have to be <code>@{$linearray&#91;$lineno&#93;}</code>, but yeah, a two-dimensional array is the sane way to go.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276641","Text":"how do I change my json in this from what image is now to my new encoded string for each object I have?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276423","Text":"@ikegami Mea Culpa. Returned OP back to what it was and added code that would reproduce the error.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276406","Text":"perfect this is what I wanted, I have updated my code, my last issue is how do I change the json of image to my $document?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26276404","Text":"Note that this differs in behaviour from the OP&#39;s code. (Try adding a third line of input: <code>... execute:error 1234567890</code>)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275626","Text":"@user1414235 Because you&#39;ve used a <i>negative</i>  lookbehind assertion, which prevented a match starting point at this position.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275589","Text":"@user1414235 Yes, and Tim told you, so what&#39;s the problem?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275515","Text":"Read <a href=\"http://www.jtable.org/GettingStarted\" rel=\"nofollow\">Getting Started</a>. It should be clear how to change your markup.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275481","Text":"I wanted to know why first space after #include is not the part of regex match.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275257","Text":"Never seen this module before! Thanks!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26275096","Text":"Or no lookbehind at all, like <code>s&#47;(#include)\\s*&lt;\\s*(&#91;^\\s&gt;&#93;*)\\s*&gt;&#47;$1&lt;$2&gt;&#47;g</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274905","Text":"tip: <code>&#91;\\s&#93;</code> is pointless. <code>&#91;&#93;</code> is for grouping MULTIPLE characters into a single match point. <code>&#91;\\s&#93;*</code> is functionally identical to <code>\\s*</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274792","Text":"You check the list of &quot;expected&quot; parameters (is that a better word than &quot;required&quot;) because when you add or rename a parameter, you might forget to set a default for it.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274764","Text":"Show what you&#39;ve tried. SO members will be happy to help if you run into problems and you&#39;re clear and specific in asking your question, but you shouldn&#39;t ask us to write the code for you.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274743","Text":"@daxim I do but I dont know how to access it in $jsonData. How would I make a loop to access the image ref for each one?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274695","Text":"What&#39;s the question/problem? Don&#39;t you know how to open a file and read it?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274455","Text":"thanks I knew it was simple just couldn&#39;t remember","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274422","Text":"Seems like it would be simplest to check for it during your first iteration through the data.   If the row key eq image then run your regex on the value.  Maybe return everything after the last / if all your image paths are formatted as such","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26274049","Text":"I think that the copied hash is a great idea. I&#39;m sure it was a mistake on my part, but there are really no &quot;required parameters&quot; as the default values are set in the subroutine. Often, only 5-10 parameters are set in if the rest of the default values are desired (this saves a ton of space and writing). Nevertheless, the main idea can stick: have a list of &quot;good&quot; parameters and compare it to what was sent in. Thanks!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26272031","Text":"Any entries in Apaches error and access log?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26270193","Text":"Can you please elaborate little more as Free text fields are stored in different table than change_item table.  @michielb","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26269647","Text":"You should never have to use <code>our</code> save when forced (e.g. <code>@ISA</code>, <code>@EXPORT</code> and <code>@EXPORT_OK</code>)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26268589","Text":"You could match <code>&#47;^keyword (.*?)+(.*?)+(.*?)&#47;</code> and validate each number if that&#39;s what you expect. You could change <code>.*</code> to <code>\\S*</code> if you&#39;re worried about whitespace. You still need a regular expression, but I think it makes your code more readable to you check to see if it&#39;s a number with the subroutine than with a long regular expression.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26268256","Text":"But now you are relying on the number being the <i>whole</i> of the rest of the string after the <code>keyword</code>. Suppose you want to find the numbers in <code>keyword 3.14+.67+7e4</code>. All <code>looks_like_number</code> will do is, given a string, tell you whether or not the <i>whole thing</i> looks like a number.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267966","Text":"@borodin, see edit. I guess my point is that we shouldn&#39;t need to make a regex to match a number since that functionality already exists in the core.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267632","Text":"That won&#39;t pull a number out of the middle of a string, which is what seems to be required.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267006","Text":"The problem is that anyone looking at the question in the future will be confused as you&#39;ve edited it to correct the error.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266982","Text":"No need to edit the original question - it is easy to get confused with references at first with Perl, but with practice it will be become easy.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266958","Text":"Perfect. I knew how to make it, and I&#39;ll go edit the OP to reflect your reference correction.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266832","Text":"Updated to provide a more explicit example of inner loop use.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266766","Text":"I had done that previously, but still cannot traverse the inner hash.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26264034","Text":"Ok, thanks..maybe I&#39;ll found a way","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263947","Text":"AFAIK, no.......","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263670","Text":"@Drt Nope. Sandra&#39;s code prints the value of <code>$1</code> unconditionally, so when the preceding pattern fails to match, it prints anyway, which is the bug.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263588","Text":"@GregBacon I think u mean &quot;never use conditionally&quot;","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263438","Text":"I thought that with perlbrew you can install different perl versions and may be used for testing apps against those versions (like backwards compatibility), and of course other features. But my question is: how can I write a MVC web-app with only CGI? is it possible? Are there any examples that I can have a look at?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263196","Text":"You should always use <code>use strict; use warnings;</code> in your scripts. If you had, you would have been given the warning <code>Odd number of elements in hash assignment at ...</code> You should also be aware that saying &quot;it doesn&#39;t work&quot; is a very, very poor way to describe a programming problem.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263018","Text":"Never use <code>$1</code>, <code>$2</code>, and friends unconditionally.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26262953","Text":"I am just asking in case my scripts get longer and I don&#39;t see a problem in making commentaries. The hint to skip commentaries isn&#39;t working for me.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26262206","Text":"<code>perl -a -nE&#39;$h{$F&#91;0&#93;}+=$F&#91;1&#93;; END { say &quot;$_ $h{$_}&quot; for sort keys %h }&#39; test</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26261259","Text":"Did you try checking what&#39;s in the $1 and $2 capture groups?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26261110","Text":"Instead of <code>{$line =~ &#47;pool: (.+)&#47;; print $1;}</code> say <code>{$line =~ &#47;pool: (.+)&#47; &amp;&amp; print $1;}</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26260840","Text":"One word: grep.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26260701","Text":"Don&#39;t use XML::Simple or any XML parser because they all want valid xml. If HTML is what you have use an HTML parser instead.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26260617","Text":"Sorry, I&#39;m kind of a newbie at perl, I&#39;m trying XML::Simple, which gives me errors when i do XMLin(&quot;file.xml&quot;) of &quot;Opening and ending tag mismatch&quot;, which refer to tags inside a specific pair of tags. That&#39;s the only code I&#39;ve got.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26260510","Text":"with <a href=\"http://perlbrew.pl/\" rel=\"nofollow\">perlbrew.pl</a> you can install your own perl and modules","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26260006","Text":"What have you tried ? What modules are you using ? where is you code ?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26258476","Text":"This question appears to be off-topic because it is about Code Golf. It belongs on <b>Programming Puzzles &amp; Code Golf</b> <a href=\"http://codegolf.stackexchange.com/\">codegolf.stackexchange.com</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26258292","Text":"I was thinking of what I want. I want to be able to stop time in my test script. After I run <code>my $ts = CORE::time(); set_fixed_time($ts);</code> (or something like that) the <code>time()</code> and <code>Time::HiRes::gettimeofday()</code> will return the same values until I explicitly run <code>$ts++; set_fixed_time($ts);</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26258162","Text":"Why do you have long, well-documented scripts that are missing semicolons all over the place? You can try leaving out lines that start with a comment using <code>^&#91;^#&#93;.*&#91;^;{}&#93;$</code>; if you want exclude any lines with comments and are willing to risk missing lines that have a <code>#</code> in them for other reasons, try <code>^&#91;^#&#93;*&#91;^;{}&#93;$</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26257852","Text":"I am using vim, thanks for that hint. But for longs scripts which are well documented I have to search for a while. Because I usually don&#39;t end my comments with ;","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26257752","Text":"(In Vim, for instance, you could just do a search for <code>&#91;^;{}&#93;$</code>, which would highlight all end-of-line characters that aren&#39;t braces or semicolons.)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26257720","Text":"This is really something you ought to be doing in your editor, not at runtime; thus, it&#39;s really more of a tool-specific question than a language-specific question. What editor/IDE do you use?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26256388","Text":"do you want something like <code>set_fixed_time_of_day</code> sub?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26255945","Text":"oops.got my ans.made a silly mistake should use &quot;/&quot; instead of &quot;\\&quot;.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26255801","Text":"use <code>perl -E</code> to enable <code>say</code> in oneliner","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254838","Text":"but from cmd it works fine. I guess perl can&#39;t locate the file path","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254817","Text":"coz when i run this my $result = <code>doxygen C:\\Users\\aghosh\\abcd</code>; or my $result = <code>doxygen &quot;C:\\Users\\aghosh\\abcd&quot;</code>; compiler gives error as Error: configuration file C:SERSGHOSHBCD not found!","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254720","Text":"Why do you want it to run in a different window?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254669","Text":"&quot;start&quot; is to start cmd. It pops out cmd window on screen","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254619","Text":"for what is the <code>start</code> ?? and did you tried it with backticks instead of a system call?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254336","Text":"The field you&#39;re looking for is <code>$res-&gt;data-&gt;{gen_info}{guid}</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253695","Text":"Thanks.  Looks like I need to import a package to use <code>say</code>, so that&#39;s out.  What&#39;s the terminology for the abbreviation thing?  Sounds like a good research pathway, at least.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253435","Text":"I see... well, there might be some solution that is more clever than anything I can come up with.  The only thing I can think of is that you can change <code>print</code> to <code>say</code> and you can change <code>@numbers</code> to <code>@n</code> if the rules allow it.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253329","Text":"@dbs - The problem statement asks for &quot;fewest possible characters&quot;, and the feedback just says &quot;Fail&quot; if it&#39;s wrong, so I don&#39;t have much to work with.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252858","Text":"Read the file: <a href=\"http://stackoverflow.com/questions/2810145/simple-file-reading-in-perl\" title=\"simple file reading in perl\">stackoverflow.com/questions/2810145/simple-file-reading-in-perl</a>\nLearn Perl: <a href=\"http://qntm.org/files/perl/perl.html\" rel=\"nofollow\">qntm.org/files/perl/perl.html</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252845","Text":"What do you mean by &quot;that&#39;s not short enough&quot;?  That&#39;s about as short as you can go without changing the name of your array.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252836","Text":"You can&#39;t go shorter than that, you&#39;d have to do $_*2for with 5 characters. It&#39;s even longer with a map{print$_*2}@numbers;","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252667","Text":"Yeah I did they said it&#39;s a more &quot;challenge oriented&quot; site so I guess this is below them :/  And Code Review has pretty much no user base...","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252633","Text":"there is a code golf stackexchange, maybe try there too","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252396","Text":"Use the <code>open</code> function and a hash and you&#39;re golden.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252302","Text":"This is not a code writing service. Please describe what you&#39;ve tried and a specific question about it.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26251686","Text":"No that won&#39;t do. The point is for every line capture the <code>pmid_xxx</code> from <code>pmid_xxx.txt</code> and print the output version of that <code>pmid_xxx.output</code> also for each line.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26251628","Text":"<code>awk &#39;{print &quot;xxx&#47;x&#47;y&#47;&quot;$0 &quot;&gt; xxxxxxxx&#47;$0}&#39; list &gt; output</code>? good luck.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26349784","Text":"thx. i understood","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26270274","Text":"thanks, it was copy-paste from original Test::MockTime + hack to disable warning)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26270036","Text":"<code>use Exporter; *import = \\&amp;Exporter::import; import() if 0;</code> can be written <code>use Exporter qw( import );</code>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26269677","Text":"Thank you for pointing out that the -&gt; can be omitted after the [$n].","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26268195","Text":"+1, the third solution is the best style.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267259","Text":"Also, and I&#39;m not sure about this because I&#39;m out of practice with Perl, but at the end of your first regex, <code>) ) ?)&#47;x</code>, are you sure it doesn&#39;t have to be <code>) )? )&#47;x</code> Can you even have whitespace between a quantifier and the thing it&#39;s associated with?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267238","Text":"@bashophil: For now, you should solve your <i>&quot;specific problem&quot;</i> by taking xcramps&#39; advice and using <code>Regexp::Common</code>. I have improved his answer to include sample code.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26267215","Text":"Is there space between the <code>keyword</code> and <code>12.124</code> in your test string? One regex uses <code>\\s+</code> and the other uses <code>\\s*</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266874","Text":"@Borodin I checked it again: <code>if ($line =~ &#47;^keyword\\s+(-? (?:\\d+|\\d*\\.\\d*) (?:&#91;Ee&#93;-? (?:\\d+|\\d*\\.\\d*) ) ?)&#47;x)  {</code> gets the exp notation. With <code>if ($line =~ &#47;^keyword\\s*(\\d*\\.\\d*)&#47;) {</code> I am able to get something like <code>12.124</code> but if I combine the two statements with the or-statement it isn&#39;t working for this floating point number.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266519","Text":"@Borodin Thx for your opinion but you can beliefe me that I have read something. Ofc I am not that experienced like others... I have an example from a tutorial which states <code>&#47;\\d\\d:\\d\\d&#47;</code> which should math something like <code>12:15</code>. Just to show my assumption with the colon. Sorry that I didn&#39;t have the time to read hours and hours of tutorials, I plan to fetch this later. But atm I have a specific problem and try to solve this. Thank you.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266418","Text":"@Borodin Please read my whole post. I search for a keyword and try to get a number (no matter which format) from this line.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266235","Text":"There were some reasons why he is not fond of using CPAN, one of which is that, when the server crashes, it might take to long to reinstall all modules that the web app depends. As far writing from scratch a web app, my skills are not that strong (yet) and it might take too long. I can write modules from scratch but knowing that cpan offers whatever I need ...why do that? Anyway I need to pursue him to accept to work with a framework that already exists. tack sa mycket :)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26266219","Text":"@bashophil: You are getting very confused. Your first regex matches <code>12.124 just fine, except for the </code>keyword` at the beginning that you have mysteriously failed to explain.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26265978","Text":"Thx Dan. The first regex (in or-statement) works for exp notation. But it doesn&#39;t work for e.g. <code>12.124</code>. So I tried to add the second regex which works for this number if I use it alone. But in the or-statement it isn&#39;t working.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26265855","Text":"Also thx for this hint but I really want to understand this. Regex seems to be extremly powerful, just need to get my brain behind it","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26265557","Text":"Yep =) This is a solution. But I hoped that this problem was already solved. And I think it is better not to write a new module, but try to patch Time::Mock or Test::MockTime.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263538","Text":"@Nemo Answer updated.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263324","Text":"@Nemo How to correct what? You seem to be thinking that we can read your mind. That path seems to print correctly, and it certainly does not print just &quot;\\server&quot;.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263069","Text":"<a href=\"http://ideone.com/RfdQOW\" rel=\"nofollow\">ideone.com/RfdQOW</a>","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263039","Text":"this prints \\server. How to correct that?","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26263010","Text":"$a = &#39;\\\\server\\toppath\\files&#39;;\nprint $a;","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26262968","Text":"Yes of course you are correct that there can&#39;t be a general rule. I was searching for a way in minimising the search and your tips are really helpful.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26258647","Text":"Yes this rule of thumb is what I was expecting too and I guess every experienced Perl user will do so. I just have to get this in my memory ;)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26258593","Text":"I am always using <code>use strict</code> and <code>use warnings</code> but <code>use diagnostics</code> is a new one for me. Thx.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26256837","Text":"You can omit the <code>-&gt;</code> after the <code>&#91;$n&#93;</code>.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26256018","Text":"yes. just saw your answer now. you are rite.made a silly mistake using &quot;/&quot; instead of &quot;\\&quot; also works. But i will use &quot;\\\\&quot; as it feels more appropriate. Thanks","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254642","Text":"Thank you Glenn, That was exactly what I was looking for, just had to change the index of the array to 0 and it worked! Got a lot of reading up to do then i see. Thank you again","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26254360","Text":"Thanks for that, that&#39;s sort of what I need. What i&#39;m looking to do is find out exactly what I need to put in my print statement like at the bottom of my post. To print just the guid field from that $res-&gt;data-&gt;... do you know what I would need to replace ... with, array&#39;s aren&#39;t my strongest point.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253493","Text":"I installed the latest one from CPAN via &#39;cpan install HTML::TableExtract&#39; which is 2.xx or so. Sorry for the confusion, didn&#39;t realize chain was changed to depth.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253320","Text":"@NoWay So which version of this module did you install, the outdated one or the one on CPAN? It it&#39;s the latter you could follow the new doc, using <code>depth</code> and <code>count</code> attributes to find your nested table of interest.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253175","Text":"<a href=\"http://manpages.ubuntu.com/manpages/dapper/man3/HTML::TableExtract.3pm.html\" rel=\"nofollow\">manpages.ubuntu.com/manpages/dapper/man3/&hellip;</a> was the one I was referring to, it&#39;s OLD and outdated (and it&#39;s the first one that shows up on a google search for &#39;chain&#39; )","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26253162","Text":"You are correct,","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252874","Text":"@ysth do you know of any module to get hypers in perl5? didn&#39;t find anything in cpan yet","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252848","Text":"yes, hyperoperators are one of the nifty things that haven&#39;t made it to perl5 yet.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252730","Text":"I&#39;m having trouble getting this to work...looks like I need a Perl 5.* solution unfortunately.","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252691","Text":"Neat!  The more I learn about Perl the more nifty it becomes - but at the same time I don&#39;t want to maintain it :)","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252166","Text":"You&#39;re welcome! You could use shell variables to split it up, similar to this: <a href=\"http://stackoverflow.com/questions/8078872/can-a-long-sed-command-be-broken-over-several-lines\" title=\"can a long sed command be broken over several lines\">stackoverflow.com/questions/8078872/&hellip;</a>. Basically store the search string in one variable, and replace string in another. I don&#39;t know if this would help much since the replace string would still be pretty long. You could also put the search and replace part in a file, and call it using the sed -f option","Language":"perl"}
{"DataSource":"stackoverflow.com","CommentId":"26252055","Text":"thanks so much. BTW is there a way I can split your code into multiple lines; It&#39;s easier to read that way in my editor, later I realized.","Language":"perl"}