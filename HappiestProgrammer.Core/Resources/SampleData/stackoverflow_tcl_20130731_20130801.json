{"DataSource":"stackoverflow.com","CommentId":"26274237","Text":"@sundar: It does not work: <b>PACKAGE</b> just a global variable, which will be overridden by the next package.","Language":"tcl"}
{"DataSource":"stackoverflow.com","CommentId":"26273811","Text":"The <code>argc</code> global can also be useful occasionally, but it&#39;s really just the same as <code>llength $argv</code>â€¦","Language":"tcl"}
{"DataSource":"stackoverflow.com","CommentId":"26258255","Text":"@sundar It&#39;s usual (but not required) to put things defined by packages in a namespace with the same name (modulo leading <code>::</code>); variables and commands are always local to a namespace, and <code>namespace current</code> exists.","Language":"tcl"}
{"DataSource":"stackoverflow.com","CommentId":"26257863","Text":"thanks for your reply. But would this work if I need to do this in multiple packages? From what I know, tcl variables are either global or local to a procedure.","Language":"tcl"}
{"DataSource":"stackoverflow.com","CommentId":"26257394","Text":"No. You can provide several different packages in the same file. <code>info script</code>, <code>info level</code> and <code>info frame</code> could help, but they don&#39;t provide the package name.","Language":"tcl"}