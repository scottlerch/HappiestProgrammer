[{"DataSource":"stackoverflow.com","CommentId":"26387800","Text":"<a href=\"http://scratchapixel.com/lessons/3d-basic-lessons/lesson-12-acceleration-structures/grid/\" rel=\"nofollow\">scratchapixel.com/lessons/3d-basic-lessons/&hellip;</a> for some information and code on the DDA algorithm in general.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26384509","Text":"How is <code>Spi_readData()</code> implemented? It looks to me that you forgot to send another dummy byte.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26381375","Text":"@angel: Please see this answer: <a href=\"http://stackoverflow.com/a/605858/694576\">stackoverflow.com/a/605858/694576</a> for why not to cast malloc() &amp; friends in C.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26368987","Text":"@angel - regarding changing the pointer when accessing the variable using its index (i.e. &#39;[]&#39;) such as string[0] or string[1], string[i++] - its not likely that you are changing the pointer this way.  Only if you do something like string++.  The first way you are accessing a location within memory, the other you are moving the pointer itself.  Your issue is likely caused by something else.  I am curious to see what alk will say.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26364116","Text":"Strictly speaking, this isn&#39;t pass-by-reference (and C doesn&#39;t support pass-by-reference, either). What you&#39;re doing here is pass-by-value, but the thing you&#39;re passing is a pointer to the object you&#39;re interested in. You get pretty nearly the same effect, but it isn&#39;t quite the same thing.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26346235","Text":"Yes it is working now","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26345001","Text":"Could you elaborate? Isn&#39;t it the same thing???","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26344922","Text":"@angel: Do not cast <code>malloc&#47;calloc&#47;realloc()</code>, as in C it&#39;s not necessary nor recommended!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26343778","Text":"For example: <code>int *sth = (int *)malloc(size); sth&#91;0&#93; = 1; &#47;* that is what I mean *&#47;</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26343693","Text":"I made some progress using valgrind (I was writing after the allocated space by ONE BYTE!), yet the errors are in the most crazy places...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26343575","Text":"I&#39;m sorry, I should have explained better. You probably misunderstood. All freed pointers are first allocated using <code>malloc</code>. I use the [] operator to access the data they point to. Due to that, there is no possibility that I change a pointer by accident, is there? :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26324079","Text":"@Joshua Yes, it would.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26322491","Text":"@angel - Sorry, kept getting errors on the last attempt. What are you using free for? Can you give me an example? I have never used free for anything created using [], that;&#39; because rather than dynamic allocation, these are statically defined. No free is necessay.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26321784","Text":"@angel - I typically only match free calls to malloc or calloc calls using any kind of pointer.  Wehn I use something such as","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26321693","Text":"Yes, you need to dereference each variable inside the <code>PeakShift</code> function.  Hence my comment in upper case.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26321318","Text":"@Shredderroy, would the original x++ point to the next <code>int</code>-sized block of bytes in the memory?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26321176","Text":"I do exactly what you say above, but then I get the following errors at compiling from inside the function: <code>error: invalid operands to binary &lt; (have ‘double *’ and ‘double’)</code> and <code>error: incompatible types when assigning to type ‘double *’ from type ‘double’</code>. Do I need to put a <code>*</code> with every use of the variables? That would make sense I guess, because you need to point directly to the value in the memory in the function as you&#39;ve said before.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26318490","Text":"Thanks for the help I looked up the ASCII commands for the enter key and had it check for that and it worked.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26313611","Text":"@HaseebAhmadBasil, that explains why you had problems. These are Linux headers and can not be used in Windows. Did you make it work with Cygwin?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26310688","Text":"@Prof.Falken I downloaded it from <a href=\"http://linux.die.net/include/\" rel=\"nofollow\">linux.die.net/include</a> just write the name of the header you re looking for like <a href=\"http://linux.die.net/include/stdio.h\" rel=\"nofollow\">linux.die.net/include/stdio.h</a> or <a href=\"http://linux.die.net/include/sys/types.h\" rel=\"nofollow\">linux.die.net/include/sys/types.h</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26300716","Text":"@user2639329, just create a directory that doesn&#39;t exist and continue follow that instructions. That&#39;s all, I thuink.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26297471","Text":"@H2CO3 :) ...... ;)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26297452","Text":"@H2CO3 :) ......","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26297422","Text":"Oh, thanks. I only use pointers with the [] operator. Can it still cause a problem?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26292527","Text":"I&#39;ve update,could you please take a look again? Thank you!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291364","Text":"@user1174511: EDIT: Yes. For save memory, if you want, you can returns offset from start and end as <code>match</code>(IIRC) function in POSIX C does. So, the new line will be the area among this offsets defined by your function.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291322","Text":"scanf() returns int.  Do not ignore that.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291309","Text":"You still can re-implement a struct like `FILE&#39; for your string. To only difference to my previously suggestion is that instead of hold offset on local variable with static storage, you will keep it on struct member.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291276","Text":"rici and Duck are absolutely right. In Linux, even the terminal window size may change at any point in time, so the library must redraw the line appropriately. Furthermore, since locales support various character sets and nonprinting and special sequences, the library must be able to count <i>glyphs</i> instead of input bytes to keep track of how long the input is on-screen, while the in-memory length may be completely different. I&#39;d go with <code>readline()</code> from the readline library simply because of its ease of use and user-friendliness. (Users like me have their own quirks set in <code>~&#47;.inputrc</code>.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291267","Text":"Hmm.  So basically looping until a new line is seen, and then saving character-by-character into the new string?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291260","Text":"No. I did a quick read on your topic, sorry for not read all. <code>fgets()</code> process input from a <code>FILE</code> pointer. You can implement it yourself, a simple looping until new line or NULL is seen, keeping on a variable with <code>static</code> storage class the offset where loop stoped and in next functions call you start from this offset.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291219","Text":"I think the following may answer your question:\r\n<a href=\"http://stackoverflow.com/questions/5597513/line-by-line-reading-in-c-and-c\" title=\"line by line reading in c and c\">stackoverflow.com/questions/5597513/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291187","Text":"Can I use fgets to process an already-existing string?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291175","Text":"<code>fgets()</code> maybe?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291168","Text":"@punekr12: it&#39;s easier to ignore a feature you don&#39;t need than to implement one you do. Anyway, if I were you, I&#39;d worry more about simplicity of interface than how much stuff it drags in behind it. There&#39;s a sample implementation of a gets() almost-drop-in (with the advantage of being overrun safe) in the readline manual, <a href=\"http://cnswww.cns.cwru.edu/php/chet/readline/readline.html#SEC23\" rel=\"nofollow\">cnswww.cns.cwru.edu/php/chet/readline/readline.html#SEC23</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291104","Text":"I guess that is what happens when you type in answers at 4 in the morning. Thanks!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291059","Text":"Take at look at the &quot;external links&quot; section here and see if any of them suits you.  At least one of them requires ncurses so I don&#39;t think you are necessarily losing overhead with that.  <a href=\"http://en.wikipedia.org/wiki/Readline\" rel=\"nofollow\">en.wikipedia.org/wiki/Readline</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291014","Text":"Inside <code>foo</code> the expression should be <code>(*x)++</code>.  Otherwise you are doing pointer arithmetic, which is not what is intended.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26291000","Text":"@rici it seems so feature rich, that I wanted to see if there is something simpler/lightweight","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290922","Text":"Yes, I&#39;m not sure if the standard guarantees under all circumstances that it won&#39;t be touched - it certainly will be touched if you enter &#39;12b&#39;, but next thing will go bang.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290896","Text":"&quot;probably&quot; - are you unsure if <code>scanf</code> won&#39;t touch <code>number</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290869","Text":"what&#39;s wrong with just using readline? It&#39;s quite easy to integrate into your application.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290819","Text":"@Duck thanks, I m using C. I am using VS but not sure if its an add-on.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290639","Text":"Seriously?  Is that some kind of Visual Studio add-on?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290177","Text":"@GrijeshChauhan And <code>void main()</code> is non-standard. I know, I know...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289752","Text":"Modern programs have only increasing chances to be confronted to characters in the range 128-255, which would be misinterpreted as negative if seen as signed chars, so the answer is “more than ever”.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289556","Text":"@n.m. That isn&#39;t the way I&#39;d look at it.  See my answer...and see my comment which observes that for each position in the haystack (one loop) you need to see whether the string starting at the current position matches the needle (that&#39;s the second, inner, nested loop).  The algorithm outlined and coded is na&#239;ve; there are better algorithms available (Boyer-Moore, Knuth-Morris-Pratt, for example: see <a href=\"http://www-igm.univ-mlv.fr/~lecroq/string/\" rel=\"nofollow\">Exact String Matching Algorithms</a> for examples). For the examples, it probably doesn&#39;t matter; for bioinformatics on DNA, it would matter a lot.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289325","Text":"What&#39;s the reason <code>-lm</code> is off limits?  It seems a rather boneheaded restriction, if you&#39;re expected to use math functions...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288564","Text":"@Mgetz No. An array cannot have length zero in standard C period. Your link to variable-length arrays show confusion, because “at the end of a structure” applies to incomplete arrays. Zero is an invalid length for both VLA and incomplete array: the length of a VLA must not be zero at run-time and an incomplete array does not have length zero, it has an unknown length.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288504","Text":"Would you say subroutine() should be declared in the header then? I was thinking perhaps it could be a &quot;private&quot; method of sorts, but I still wanted to document it somewhere.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288400","Text":"Yeah, or at least mention, so we can guide, rather than solve. I don&#39;t know if I have enough rep to add tags or not.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288381","Text":"@H2CO3 ;)  Not included","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288380","Text":"@JonathanLeffler: you need to count the matches. That&#39;s one loop. You also need to find the next match. That&#39;s another loop. Correct?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288284","Text":"@GrijeshChauhan In <code>&lt;stdbool.h&gt;</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288175","Text":"What does the debugger show you when you step through your loop?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288174","Text":"How are you trying to determine those 5 bytes?  What&#39;s the problem you&#39;re having/trying to solve?  Are you just trying to do a <a href=\"http://www.cplusplus.com/reference/cstring/memcpy/\" rel=\"nofollow\">memcpy</a>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288083","Text":"Your question makes no sense so far.  First, <code>buffer</code> cannot be created without a size.  A value must be inside the <code>&#91;&#93;</code>.  i&lt;buffer is not proper, as <code>i</code> is an <code>int</code>, and <code>buffer</code> is a <code>char&#91;&#93;</code>.  Work on getting your existing code to a usable point, then you can ask a question about adding on to it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288045","Text":"wehere <code>true</code> is defined??","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288008","Text":"What have you tried so far? Why is there a while(true) around the for loop?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287776","Text":"It&#39;s subjective, but often the comments are found in the header file, because they serve as API documentation.  See, for example, <code>python.h</code> and <code>zlib.h</code> for examples of popular libraries which do this","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287724","Text":"@ElchononEdelson I know, I was going to correct it but my post was moved as a comment and I couldn&#39;t edit it anymore.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287557","Text":"@user2553780 regardless of how unwise it might be to do so in a microcontroller context, the language does permit passing structs by value, so saying &quot;you can&#39;t do it&quot; is factually incorrect. (It&#39;s perfectly alright to say &quot;it&#39;s a bad idea to do it&quot;, of course.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287509","Text":"@Tim, if you have a pointer-to-struct, you access the content of the struct using the <code>-&gt;</code> operator: <code>p-&gt;wavType</code>. The dot operator is for direct structs, not pointers to.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287431","Text":"@user2553780 Ok, I&#39;ll look into that. However, when I had passed the struct as a pointer, when I tried to do, for example, \ndataH = p.wavType; I got an assignment error to do with it being a pointer..?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287420","Text":"The program is homework.  Was I supposed to tag that?  The assignment is to write a bucket sort that uses n processes, with each process containing n buckets.  My inexperience with C, specifically with arrays in C, isn&#39;t really the assigned problem...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287340","Text":"@Blackdragon1400 VLAs work by allocating memory AFTER the structure directly in most cases, they are a large case of UB in many cases. Also don&#39;t assume that GNU C is valid anywhere else.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287198","Text":"@Mgetz, Changing the value to 1 fixes the incomplete type error, but shouldn&#39;t there be a better way to fix that? It compiles fine on my other GNU toolchain.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287168","Text":"Error checking is always important. Error handling is nice, too.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287048","Text":"Ah I did not know that, I was always told to use the ato* functions, but that&#39;s good to know, I&#39;ll try that and let you know how it works :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286928","Text":"Actually, <code>&quot;a&quot;</code> is not a <code>const char *</code>. <code>&quot;a&quot;</code> is a an <code>array 2 of char</code>. In the statement <code>str&#91;0&#93; = &quot;a&quot;;</code>, <code>&quot;a&quot;</code> evaluates to a <code>char *</code>. While it is true that attempting to modify a string literal results in Undefined Behavior, it does not have <code>const</code> type.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286755","Text":"Is this homework?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286477","Text":"You can&#39;t have arrays of length 0 in C.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286438","Text":"its defined as zero, I also replaced NUM_ADC with a 0 and it is still throwing an incomplete type error.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286284","Text":"Again, avoid passing structs by value. See <a href=\"http://stackoverflow.com/questions/161788/are-there-any-downsides-to-passing-structs-by-value-in-c-rather-than-passing-a\" title=\"are there any downsides to passing structs by value in c rather than passing a\">stackoverflow.com/questions/161788/&hellip;</a>. People who have never built applications on embedded systems may say all sort of things, but on embedded systems is important to pay attention to good programming practices.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286234","Text":"If those are the only two lines with errors, then it&#39;s probably something wrong with <code>NUM_ADC</code>. How exactly is it defined?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286160","Text":"(Actually, I&#39;m remembering that OS/2 <i>tried</i> to do this, where code compiled for 16 bits could be mixed with code compiled for 32 bits in the same process.  IIRC, it didn&#39;t work out too well (and then, of course, neither did OS/2).)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285879","Text":"Hmm, do you think then that it is a problem with the assignment: I.E\np-&gt;wavType = receive(); Will this (assuming that dataR populated correctly) set the value of wavType to the whatever was in dataR?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285845","Text":"On all common systems that I&#39;m familiar with, a given process has a fixed size address space.  You can have two processes on a system, one running with a 32-bit space and one with a 64-bit space, but the processes are separate and an address in one does not/cannot refer to a location in the other.  Any data sharing between the two would be via either message passing or page sharing, with the page being mapped to different locations in the two spaces.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285778","Text":"@jxh I didn&#39;t distinguish that sleep() is being interrupted, I just assumed that the only reason I would get a stacktrace pointing to sleep() would be because the call was interrupted.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285755","Text":"@TimMottram Then that seems correct...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285703","Text":"@H2CO3 yes this correct, I left out the clock and fsync parts as they were not part of the problem. Each time i pass through the loop the data is changing, also, I have checked that the data is correct (by watching the data line and the clock line). I wait for the clock to drop, then move the data bit into the i&#39;th position of dataR. But if, as you suggest, my method of writing to a bit in a byte is incorrect then please show me the correct method :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285609","Text":"The behaviour I am experiencing is that, after sending the data, the chip I am sending it to does not behave as expected is the data I had sent was correct. If you want more info let me know, but its all electronics..","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285605","Text":"You distinguished the <code>sleep()</code> call returning normally from being interrupted? If the stack trace is from a core file, GDB should tell you what signal caused the core file to be generated when you load the core file.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285592","Text":"@TimMottram This implies that the status of RB1 changes to the next bit (assuming serial communication) after you read it. Is that the case?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285472","Text":"@H2CO3 By using: dataR |= PORTBbits.RB1 &lt;&lt; i;  am trying to move the value (be it a 1 or 0) in to dataR at the place specified by i. When I send I use: \n   PORTAbits.RA5 = (dataH &gt;&gt; i) &amp; 1\nto move the bit in position i of dataH on to a port. I had thought (due to research) that this was the correct method of writing to a bit in a byte, if this is incorrect can you tell me the correct method please? In short, I am trying to write to a bit in a byte, at the position &quot;i&quot;","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285359","Text":"You might have some luck with <a href=\"http://linux.die.net/man/1/strace\" rel=\"nofollow\">strace</a>, but in general I don&#39;t think it&#39;s possible to track down the exact origin of the signal.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285322","Text":"Consider &#39;unsigned char x = PORTBbits.RB1; dataR |= x &lt;&lt; i;`.  You may have trouble shifting a 1 bit field.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285615","Text":"@H2CO3 As for your first question, it&#39;s answered right there. As for the second question, I made a mistake but I haven&#39;t seen anywhere passing structs by value. I assume it&#39;s not good practice and probably would introduce awful performance specially if he&#39;s copiling for a microcontroller.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285248","Text":"You mentioned &quot;not working as it should&quot;.  What errant activity have you noticed?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285243","Text":"As @H2CO3 suggests, make sure your <code>receive()</code> function is returning the data you are expecting to get.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285614","Text":"&quot;I&#39;d recommend you to define your signed char i outside the for loop&quot; - why? - &quot;Now, you cannot pass a struct by value&quot; - what if I told you that you can?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285613","Text":"You <b>can</b> pass a <code>struct</code> by value.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285096","Text":"<code>dataR |= PORTBbits.RB1 &lt;&lt; i;</code> - I don&#39;t know what you are trying to achieve using this, but it seems wrong.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285084","Text":"I don&#39;t know the answer to your question, but, you <i>can</i> mask all signals except <code>SIGKILL</code> with the use of <code>sigprocmask()</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285611","Text":"I&#39;d recommend you to define your <code>signed char i</code> outside the for loop, most compilers would at least throw a warning depending on how it&#39;s being compiled. Now, you cannot pass a struct by value, it won&#39;t know what to do because there&#39;s no predefined function to copy your struct by value.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284959","Text":"I have rewritten the question as I understand it. If this is incorrect, you can roll it back to the previous version.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284896","Text":"Ok thanks anyway this lools like a waste of time. I used google and got links to download when I isiorg the glut32.bin file out said copy files to directorys.that don&#39;t exsist.thank anyway","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284817","Text":"Are you getting an exception? Or what is your problem exactly?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284737","Text":"Compiling with g++ on my system still gives the same results","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284639","Text":"What is fine, does it print all 1s (F&#39;s in hex in my code)??","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284293","Text":"This will be very obvious but... Ask any search site like google.com on this subject. I think that there is a lot of guides like &quot;How to ... OpenGL ...&quot;.\n\nBy the way, <b>SO</b> don&#39;t like questions like this one.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284208","Text":"Just read that some compilers don&#39;t support variable sized arrays on the stack, could that be your issue?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284184","Text":"<code>bzero()</code> should be replaced by <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/memset.html\" rel=\"nofollow\"><code>memset()</code></a> and <code>bcopy()</code> should be replaced by <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/memmove.html\" rel=\"nofollow\"><code>memmove()</code></a> (Note: <code>bcopy(ONE, TWO, THREE)</code> gets replaced by <code>memmove(TWO, ONE, THREE)</code>.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284117","Text":"Right, could someone tel me how to download opengl or something similar so I can program 3d games on codeblocks","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284071","Text":"I just tried it myself, but reading is fine in my case - (linux g++ 64 bit)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284020","Text":"This means you have <b>to create an unexisted directory</b>. And then point Code::Blocks to this directory (when starting <code>OpenGL project</code>).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283991","Text":"Please note, you should not be using the functions named <code>bzero()</code>, <code>bcopy()</code>, and <code>atoi()</code>. The <code>bzero()</code> and <code>bcopy()</code> functions were deprecated in the previous version of POSIX and are excluded from the current standard. The <code>atoi()</code> function is explicitly defined as having no error handling, and is otherwise equivalent to <code>(int) strtol(str, (char **)NULL, 10)</code>. <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/strtol.html\" rel=\"nofollow\">(See also: <code>strtol()</code>)</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283944","Text":"Like your <a href=\"http://stackoverflow.com/questions/17978430/using-graphics-with-c-compilers\">other question</a>, it is not at all clear what the problem is. You describe it in such general terms. We don&#39;t know what &quot;download with the links&quot; means. We do not know what the &quot;it&quot; you&#39;re talking about is. We don&#39;t know what &quot;directorys&quot; this &quot;it&quot; is telling you to copy files to. You need to <i>tell us things</i>. Be as specific as possible.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283938","Text":"This is not a programming question, which is what SO is meant for.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283591","Text":"C does have a boolean type, named <code>_Bool</code>, and according to N1570 7.18 2, if you include <code>&lt;stdbool.h&gt;</code> &quot;The macro <code>bool</code> expands to <code>_Bool</code>&quot;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283564","Text":"Don&#39;t want to get too off topic but <a href=\"http://stackoverflow.com/a/4306269/579132\">stackoverflow.com/a/4306269/579132</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283314","Text":"@HotLicks i am talking about code portability between 32 and 64 bit addressing models","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283303","Text":"By the way, I thought it would be &quot;packed&quot; instead of &quot;_ <i>packed</i> _&quot;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283269","Text":"@WhozCraig you understood my problem correctly, i cannot make a 64 bit application thats a restriction, do you see some method to do this in 32 bit space only","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283225","Text":"Yep, unpacked structs still don&#39;t work","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283057","Text":"Have you tried to use an unpacked struct?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282695","Text":"Read: <a href=\"http://stackoverflow.com/questions/17926794/incrementing-pointers-exact-sequence\">*a++ = *b++</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282587","Text":"@Carl He can. but he might be looking for reasoning not output.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282565","Text":"<a href=\"http://www.isthe.com/chongo/tech/comp/c/c-precedence.html\" rel=\"nofollow\">isthe.com/chongo/tech/comp/c/c-precedence.html</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282533","Text":"Can&#39;t you just <i>run</i> that program find its output?  (Well, if you fix it to not have undefined behaviour first...)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282495","Text":"I see you&#39;re dealing with pointers but this might help: <a href=\"http://stackoverflow.com/questions/1094872/is-there-a-difference-between-x-and-x-in-java\" title=\"is there a difference between x and x in java\">stackoverflow.com/questions/1094872/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282464","Text":"Think about <code>++*y</code> and <code>*++y</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282410","Text":"Read: <a href=\"http://en.wikipedia.org/wiki/Orphan_process\" rel=\"nofollow\">Orphan process</a> and its drop backs","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282406","Text":"the child could call _Exit the parent doesn&#39;t have to","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282345","Text":"The question says &quot;without parent killing child process explicitly&quot;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282308","Text":"@CarlNorum no C answer..","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282296","Text":"The recommended function to use instead of <code>atoi()</code> is the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/strtol.html\" rel=\"nofollow\"><code>strtol()</code></a> function, and instead of <code>atof()</code> use the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/strtod.html\" rel=\"nofollow\"><code>strtod()</code></a> function. These functions provide well-defined error handling.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282222","Text":"It is not recommended to use the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/atoi.html\" rel=\"nofollow\"><code>atoi()</code></a> or <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/atof.html\" rel=\"nofollow\"><code>atof()</code></a> functions, as they provide no error handling, and you get Undefined Behavior in the case of conversion failure.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281935","Text":"As Casey pointed out, there is not obvious mistake (as far as i can tell). Are you sure the data the server sent make it back to the client? Did you try wireshark, or some other tools?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281759","Text":"There&#39;s nothing obviously wrong in this code or in your description. It would appear the problem is on the server side.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281748","Text":"I&#39;ve used TCP before to solve the same problem, but now I&#39;m trying to do it using UDP and implementing my own measures to account for error control and packet loss.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281624","Text":"Or are you looking to somehow implement a paged/overlaid system so you can get more &quot;addressability&quot; from a 1G space somehow?  To do that you&#39;d need to step outside of ordinary pointers and use a dope vector or some such.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281564","Text":"Yes sizeof(IMAGE) is 3. And see my edit for the padding","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281552","Text":"You need to rephrase your question.  It&#39;s unclear whether you&#39;re talking about code portability between  32 and 64 bit addressing models, or you somehow view using a 64-bit model as allowing you to  address more in a 32-bit space.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281495","Text":"Use TCP but UDP?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281253","Text":"So.. you want your 32-bit application to have access to a 64-bit address space? Um... Any reason you don&#39;t just make a 64-bit application?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281016","Text":"To allow C++ comments in C code call mex as follows: <code>mex CFLAGS=&quot;\\$CFLAGS -Wp,-lang-c-c++-comments&quot; mymexfile.c</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26280869","Text":"You are swapping height and width in your reading loop. Not the issue here (for a square image), but you might want to correct it. Can you verify sizeof(IMAGE) is 3? Also, can you open the BMP image in a hex viewer and verify there is no 0 padding byte between the rgb triplets?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26280843","Text":"Please determine and post the exact command line which <code>mex</code> uses to invoke <code>gcc</code>.  I suspect there is something in there which is disabling support for <code>&#47;&#47;</code>-style comments (there are several options which do this (and other stuff as well)).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26280730","Text":"Can you list out the compiler errors?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279991","Text":"Where from did you download the header files?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279746","Text":"Sounds good, but I finally have to complete this project! :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279684","Text":"&quot;<i>I&#39;ve been trying to locate the bug all day ...</i>&quot; as an irrational advise: Take a break, a good meal, either a nice movie or your girl/boy and then have a sleep .. and only then start over with debugging, preferable using Valgrind. ;-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279597","Text":"I&#39;ve checked both possibilities; unfortunately, either this is not the case or locating the bug is beyond my powers... What is <code>valgrind</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279499","Text":"Have you already tried using <code>valgrind</code>? I would suspect you are writing to freed memory or writing beyond an allocated buffer.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279477","Text":"&quot;Can this problem be caused by reading from memory that is out of bounds?&quot; definitely yes, I have seen this happen quite often","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279472","Text":"As I said, the problem arises at a specific part of my application, but might be caused at any point. I checked again and again that part and it works fine. Only when working as a whole, the program crashes. I can&#39;t upload 22 files! :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279364","Text":"Can you show related code?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279207","Text":"like each time a person makes his question, what he actually gets is the dose of critics and observation on how he did the question. I think i must bare with it. Thats the nature of ppl nowadays","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279045","Text":"hey dont take it with me, and this rep system in my point of view sukcs (&lt;--- did that intentionally). I have just a question, there may be bad questions, but when someone ask a question , he asks because he don&#39;t know the answer to it, so to whoever know it , may seems as a stupid question. And yes i dont know all possible tags.. -.-","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278823","Text":"@ShPavel Yes ShPavel. As I said Scott it allocates 1 byte. I did this to try dynamic char* size.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278810","Text":"@MichaelWalz Thanks Mike, added NULL.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278769","Text":"@ScottMermelstein Yes It allocates 1 byte. I did this to try dynamic char* size.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278259","Text":"I see, inserted NULL","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277961","Text":"@ShafikYaghmour Traditionally it was explicitly extended to -1 because that was the usual end of file marker.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277764","Text":"Another problem : in yours samples you do not terminate the parameter list with a NULL, it should be &quot;ShowMsg(style1, &quot;a&quot;, &quot;s&quot;, &quot;d&quot;, NULL);","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277510","Text":"It comes down to what you&#39;re writing and what you want to do with it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277483","Text":"For example, look at <a href=\"http://www.cdrummond.qc.ca/cegep/informat/professeurs/alain/files/ascii.htm\" rel=\"nofollow\">cdrummond.qc.ca/cegep/informat/professeurs/alain/files/&hellip;</a> .  Note that the &quot;0&quot; character is decimal 48/hex 30, and the &quot;1&quot; character follows immediately after.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277362","Text":"Works for me. What errors are you getting?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277294","Text":"which terminal emulator are you using to communicate with the AVR over the serial port? Check whether it sends a <code>CR</code> or <code>CR</code>+<code>LF</code>. This is usually a configurable setting in most Terminal emulators. Once you determine the settings, simply check for that character(or pair in case of CR+LF) to arrive in plain-text i.e. ASCII on the receiving-end i.e. on the serial-port of your AVR.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277291","Text":"take a look at an ASCII table.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277286","Text":"@dasblinkenlight from the question I think most probably OP means <code>&#39;0&#39;</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277274","Text":"It&#39;s the <code>&#39;\\0&#39;</code> zero that you are talking about, right?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277210","Text":"Your <code>strcat(joinedString...</code> looks very suspicious to me.  How much space is assigned to joinedString?  It looks like only one byte to me.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277139","Text":"&quot;This behaviour is strange because each time this function is called joinedString is initialized&quot; it is always initialized to the pointer to the same string(&quot;&quot;) and you modify it after, that is not safe. Use malloc to allocate memory for char* vars.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277121","Text":"Actually there is no answer to your question unless you give us some more details. Where is your programm running ? On the AVR microcontroller ? On a PC with Windows ? On a Macintosh ? On some linux system or maybe even on a Cray XMP computer ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276449","Text":"The goal is not clear to me. Lets say you have 4 strings...         {char a[4][80]} Can you clarify what you mean by &quot;shuffle strings&quot;  with an example?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276397","Text":"+1, I&#39;ve been wondering the same thing trying to write my own C-runtime library","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276379","Text":"&quot;I can&#39;t do it&quot; is a fact, not a question. What&#39;s your question?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276376","Text":"If you can shuffle a string, then you can shuffle an array too, since strings are arrays too.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276336","Text":"Use pairs. Then for each pair, give random integers for ordered chars. Then order the pair for integer keys. Then the array(string) will be scrambled.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276335","Text":"Please clarify as to what you&#39;re asking.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276321","Text":"You need to show what you have tried and ask specific questions.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276257","Text":"As other has said, give it a shot. Try to pass in an argument of the range each thread should process....one way of doing it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276256","Text":"@DavidRobinson i have tried to give input 4,3,2,1 and output sholud be 1,2,3,4 . but it only shows 1 first node.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275942","Text":"@n.m.: Did that, it didn&#39;t work... are you sure that&#39;s supposed to work?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275933","Text":"Why should you never set temp-&gt;link?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275811","Text":"Also, <a href=\"http://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc\">don&#39;t cast the return value of malloc</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275808","Text":"<code>insertNode_sl()</code> is buggy, it doesn&#39;t need to update <code>header</code> (maybe only if header-&gt;link is NULL, only the first time you insert a node). But please indent your code so it&#39;s easier to read. There are other design issues in your code, but that&#39;s outside of the scope here.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275794","Text":"You never set <code>temp-&gt;link</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275761","Text":"Now I can&#39;t make it fail.....hmmm.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275749","Text":"Could you show the output it prints?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275461","Text":"@user2570509 what do you means by <i><code>can we use &amp;&amp; in that case or what</code></i>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275224","Text":"@user2570509 <b>Not</b> if its a c programming puzzle its a correct code! yes, and if you have typo the it should be <code>!=</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275148","Text":"I can&#39;t figure out what approach this is trying.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275087","Text":"you should start accepting some answers to your questions if you want users to better consider your questions","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274919","Text":"How much do you pay ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274770","Text":"Sometimes mail servers just drop connections instead of being polite in an attempt to reduce wasted time on spam bots. This probably indicates a slight error in the received message not being 100% to standard.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274604","Text":"Use the full path name of the <code>.lib</code> or <code>.dll</code> file, no <code>-L</code> or <code>-l</code>, just the filename, like in <code>g++ -o foo.exe foo.o c:\\something\\somethingelse\\some.lib</code>. (You can also use the usual -L/-l convention but only if the library name file starts with &#39;lib&#39;, which is normally not the case under Windows).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274513","Text":"no, i change zz1==!0 to zz1!=0","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274474","Text":"i got!!!!!!!!!!!!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274447","Text":"Your output is more than likely being buffered, since there&#39;s no newline","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274436","Text":"C,,,,,,,,,,,,,,","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274434","Text":"Don&#39;t you think it would have been very helpful to mention that <i>.mat</i> files are <i>MATLAB</i> files in your question? Or do you really believe that this is a well known fact to everyone on SO? Also adding a MATLAB tag wouldn&#39;t have been such a bad idea, wouldn&#39;t it? Especially if such a tag already exists, and it does (fixed that for you).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274346","Text":"@karthikr is <code>zz1==!0</code> =&gt; <code>zz1 == !0</code> <b>?</b>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274255","Text":"Check your syntax <code>(zz1==! 0 )</code> which programming language did you get that from ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273650","Text":"I&#39;m not going to flag this question, but in general, asking for a library recommendation is not suited for SO.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273577","Text":"What is the format of the mat file?  If you open it up in a text edit, how is the data formatted?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273433","Text":"its C!.........","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273429","Text":"Why do you think that?  When I ran it, it looks like items 2 and 4 were taken.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273192","Text":"Have you tried running the code to see if it&#39;s correct?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273013","Text":"even so c and it&#39;s friends do not enforce it, even such code can profit from clear indentation.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273006","Text":"C doesn&#39;t have bool types","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272959","Text":"I presume this is C, since it uses a variable called &#39;new&#39;?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272876","Text":"you should mention your programming language so we do not need to guess. this also increases visibility within stackoverflow.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272588","Text":"<a href=\"http://www.calcul.com/catalan-recursive\" rel=\"nofollow\">Here</a> is an alternative method for computing catalan numbers, which doesn&#39;t involve division, and might be a bit simpler to implement.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272324","Text":"Also, I imagine the <code>for</code> loop in your <code>PrintSeq</code> function should start off <code>i = 0</code>, not <code>i = 1</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272237","Text":"What exactly does &quot;my code is not working&quot; mean? Is it segfaulting? Not producing what you expect?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271755","Text":"let us <a href=\"http://chat.stackoverflow.com/rooms/34538/discussion-between-magn3s1um-and-froskoy\">continue this discussion in chat</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271641","Text":"if ( sendto(s, buf, len, 0, &amp;sa, sizeof(struct sockaddr) ) &lt; 0 ):  Why this? sizeof(struct sockaddr) ) &lt; 0; isn&#39;t that boolean and not an integer value like that argument reuqires?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271285","Text":"<code>buf</code> consists of a full ethernet header, followed by (probably) an IP header or ARP packet. All addresses are already in network byte order and it&#39;s ready to send out on the interface, as is.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271176","Text":"so what data is there? can you post that?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271141","Text":"The router would know, because I already have the link layer header information included in my input data - it&#39;s a fully constructed ethernet frame already!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271120","Text":"@nouney The errors are illogical the errors are in headers files the errors are like  <code>missing ; before identifier</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271045","Text":"<a href=\"https://en.wikipedia.org/wiki/Ethernet_frame\" rel=\"nofollow\">en.wikipedia.org/wiki/Ethernet_frame</a>.  Yes, you put your own mac address (how else would the router know to send it back to you? ) The way it works is, you put a source ip, and a destination ip, and you put a source mac address (yours), and then you put your router&#39;s mac address as the destination.  Then when the router gets it, it keeps the source ip and destination ip, but changes the mac addresses to its own as the source, and then as the NEXT router as the mac address. This keeps happening until the packet reaches the destination.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26270370","Text":"So you&#39;re saying that in the MY_DEST_MAC in the example link you sent, I fill in my own MAC address? That seems a little counter intuitive, since I&#39;m not sending the frame to myself. The fact that I have to even fill in a MAC address makes me think the card is going to do some additional encapsulation, which I don&#39;t want?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26270181","Text":"Ahem. <a href=\"http://stackoverflow.com/questions/1519585/how-to-get-mac-address-for-an-interface-in-linux-using-a-c-program\" title=\"how to get mac address for an interface in linux using a c program\">stackoverflow.com/questions/1519585/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269945","Text":"I think that&#39;s close, but what do I fill in for the destination MAC address in sll_addr? If possible, I want to avoid having to extract this from my input data (since the packet&#39;s already constructed, so I don&#39;t see why I have to tear it apart). I guess I understand if this isn&#39;t possible though?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269816","Text":"Take a look here. <a href=\"http://austinmarton.wordpress.com/2011/09/14/sending-raw-ethernet-packets-from-a-specific-interface-in-c-on-linux/\" rel=\"nofollow\">austinmarton.wordpress.com/2011/09/14/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269779","Text":"compile with gcc in Linux, not window sockets","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268630","Text":"This code should not even compile. What compiler are you using?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268540","Text":"@EricPostpischil: added some updates to my post. What do you suggest about types, how to change them for all my used variables? Btw, <code>sizeof(unsigned long) is 4 bytes</code> shows me 4.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268403","Text":"I get a negative result (often) when I compile and execute for i386 (<code>unsigned long</code> is 32 bits) but not when I compile and execute for x86_64 (<code>unsigned long</code> is 64 bits). Check that your build target is a 64-bit target. Add a statement <code>printf(&quot;sizeof(unsigned long) is %zu bytes.\\n&quot;, sizeof(unsigned long));</code> and see whether it prints eight. It would be preferable to <code>#include &lt;stdint.h&gt;</code> and use <code>uint64_t</code> instead of <code>unsigned long</code>. Also, I had to make a number of modifications to compile. If the problem persists, please post a <a href=\"http://sscce.org\" rel=\"nofollow\">self-contained compilable example</a>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268270","Text":"Since the <code>&#91;^,&#93;</code> did not begin with a <code>%</code>, sscanf() was looking for the 4 letters exactly in the input string.  Failing to find those, the scan stopped, leaving <code>double2</code> to its previous value.  Hence the importance of checking the sscanf() result.  Who knows what evil data come in from files and stdin?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268191","Text":"thanks for advice, did you get the problem ??","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268139","Text":"Note that 64-bit <code>double</code> cannot store all the bits of a 64-bit <code>unsigned long</code>. If the <code>rdtsc</code> values have some of the high nine bits set, you may be getting rounding errors. This should result in losing precision but not negative values (the effects of rounding should be monotonic) in the subtraction, until the counter wraps. In any case, it is better to store <code>rdtsc</code> values as <code>uint64_t</code> until after they are subtracted, then convert the result of subtracting to <code>double</code> if desired.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268017","Text":"Before the existing <code>printf</code>, print the values of <code>cpuCycleEnd</code>, <code>cpuCycleStart</code>, <code>counter</code>, and <code>inputsSize</code> separately. If <code>counter</code> or <code>inputsSize</code> are negative, figure out why and fix them. If <code>cpuCycleEnd</code> is less than <code>cpuCycleStart</code>, figure out why. Did the counter wrap? Are they close to other values returned by <code>rdtsc</code> calls (if you insert more calls to see)? Is <code>unsigned long</code> 64 bits in your C implementation? If you print the value of <code>rdtsc</code> as an <code>unsigned long</code>, is it the same value that is printed after converting it to <code>double</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267871","Text":"@EricPostpischil: yes, I know that but tested it earlier on a different function and results were ok :/","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267797","Text":"@Dan: improved code but still gives me negative results. Yes, I&#39;ve updated counter in my first code.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267649","Text":"Incidentally, on modern processors, <code>rdtsc</code> is defined to measure real time (wall-clock time), not processor time. Intel changed the specification years ago. It will not measure processor cycles in the presence of processor speed changes or various power states.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267645","Text":"Thanks chux, it worked, I tought I should use the [^,] also with doubles because I don&#39;t have spaces. I had the &quot;&amp;&quot; signs (edited the code now) when I asked the question, it was a typo, sorry about that.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267526","Text":"Why are you storing a <code>uint64_t</code> into a <code>long double</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267466","Text":"What are you expecting <code>while(counter &lt; 3s)function(args);</code> to do, if you never update <code>counter</code>? Why does it say <code>3s</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267306","Text":"You&#39;re not showing your real code (you&#39;d need to pass &amp;double1 and &amp;double2 into sscanf). Cut and paste your actual code and then we might be able to help.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267295","Text":"Please update the question, other users with your specifc question will look for information there, not in the comments.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267249","Text":"Change <code>&quot;%4&#91;^,&#93;,%4&#91;^,&#93;,%lf&#91;^,&#93;,%lf&#91;^\\n&#93;&quot;</code> to <code>&quot;%4&#91;^,&#93;,%4&#91;^,&#93;,%lf,%lf&quot;</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267211","Text":"Why not use the much simple format string <code>&quot;%3s,%3s,%lf,%lf&quot;</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267102","Text":"let me introduce to the actual problem, this is related to caching stuff, we have limited size on ram that is a 32 bit space, so if we have 1G space on ram and my structure size for a single cached object is 1M then the number of objects i can store is limited to 1G/1M. therefore to solve this probem i want to declare my structure in 64 bits spcace (so that there is no spcace crunch ) and number of objects can be incrased to infinite practically.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26267092","Text":"yes, the SDcard init work ok, the CMD24 works good too.. \nfor a try i made an array made like this:\n \n        array[0] = 254= 11111110 // Start Block Token                          \n\narray[1-511]= random byte to send\nand i try to send this array","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266648","Text":"yes sorry my bad","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266637","Text":"@PaulFilch check its <a href=\"http://ideone.com/nvbxwE\" rel=\"nofollow\">working here</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266586","Text":"You mean <code>ld</code> right? Not <code>Id</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266569","Text":"@PaulFilch Which is odd because it does work: <a href=\"http://coliru.stacked-crooked.com/view?id=f12d68d2388567dcda773831985aa82b-f674c1a6d04c632b71a62362c0ccfc51\" rel=\"nofollow\">coliru.stacked-crooked.com/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266552","Text":"@PaulFilch what exactly error you gets, which compiler is you are using ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266518","Text":"@GrijeshChauhan I tried that, still does not work","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266512","Text":"Permission denied? Maybe you&#39;re already running the program and the compiler has problems writing the executable, because it&#39;s open.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266488","Text":"Why on earth would you want to do this..?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266468","Text":"<a href=\"http://stackoverflow.com/questions/17749100/explain-output-of-this-c-program\">Explain output of this C program</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266467","Text":"It also says Permission denied above the <code>Id returned 1 status</code> message","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266435","Text":"this is Undefined behavior","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266411","Text":"Is that the full error message ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266406","Text":"@PaulFilch first add <code>int</code> before <code>main()</code> then again compile and run also remove function <code>getchar();</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266370","Text":"What do you mean?  I press the compile button.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266359","Text":"Not the problem either, but you should match format and arguments of <code>printf()</code> with, say, <code>printf(&quot;… %d … %d\\n&quot;, (int)num, (int)num1);</code> (many other solutions are possible).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266340","Text":"@Paul Filch - how are you compiling it?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266329","Text":"@GrijeshChauhan That&#39;s not the problem it still doesn&#39;t work","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266302","Text":"@GrijeshChauhan You probably read it incorrect.  OP says <code>it does not compile</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266297","Text":"@GrijeshChauhan I don&#39;t think that&#39;s the problem, but then again I don&#39;t know what it is either","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266195","Text":"@PascalCuoq Assigning it to an <code>int</code> variable truncates the returned value, so if it&#39;s used in further calculations those may actually end up wrong.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266184","Text":"after <code>getchar();</code> and before <code>}</code> , add a line <code>return 0;</code>, <code>main()</code> function should return termination status that is <code>int</code>-- so this warning appearing.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266028","Text":"What is the <i>actual error</i> the compiler is giving you?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265985","Text":"possible duplicate of <a href=\"http://stackoverflow.com/questions/1711915/sqrt-from-math-h-causes-compile-error\">sqrt from math.h causes compile error</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265981","Text":"I presume that the card initialization ran OK - all returns checked etc?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265956","Text":"@JoachimIsaksson The OP is using a platform where, unlike Mac OS X, the <code>-lm</code> flag is necessary to link in the math library.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265925","Text":"@JoachimPileborg So what is the problem with passing an int to sqrt or assigning sqrt&#39;s result to an int lvalue, as long as math.h is included to provide a prototype?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265918","Text":"<code>echo &quot;#include &lt;math.h&gt;&quot; &gt; test.c ; echo &quot;int main() { int a; a = sqrt(9); return 0; }&quot; &gt;&gt; test.c ; gcc -ansi -Wall -pedantic test.c</code> compiles without a hitch on MacOS and Ubuntu. What are you using?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265792","Text":"If the problem is that you get an undefined reference to <code>sqrt</code> when linking, it&#39;s because you don&#39;t link with the math library with <code>-lm</code>. The only way to solve this is to link with the math library with <code>-lm</code>. There&#39;s really no other way of solving it otherwise, except to write your own function.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265732","Text":"Remember that <code>sqrt</code> takes a <code>double</code> for argument, and returns a <code>double</code>. You&#39;re calling it with an integer, and assigning it to an integer variable.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265710","Text":"What is the exact problem, other than having &quot;a&quot; problem?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265702","Text":"what error are you getting?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265619","Text":"And why the downvotes? I would think that in general we are trying to discuss the quality of the question, not the code. To me this seems a perfectly valid c question about horrible hard to maintain code.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265534","Text":"If you are going for optimizations here just be adviced that the small saving in memory has a greater impact on performance. Try to look at the assembly output of bitfield manipulation to see the result.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265291","Text":"I wanted to save that effort. My code is too big, if I could get struct dump from some tool, it would save a lot of effort.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265227","Text":"I believe you can write your own C function <code>void dumpSample(test *myStruct);</code> which prints as you wish, and call it from gdb: gdb$ print dumpSample(&amp;test)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265047","Text":"&#39;set print pretty&#39; gives a different display. I want dotted notation in output","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264887","Text":"<code>set print pretty on</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264209","Text":"I am still working on the deleteFunction then insertion would be next and then delete in the middle of a linked list. I am taking it slowly, I am new at this. :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263830","Text":"You have a <code>previous</code> link, but you never set in when inserting new nodes.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263630","Text":"Please learn to enable all warnings and debugging information during compilation (with GCC, compile with <code>gcc -Wall -g</code>) and then learn how to use the debugger (e.g. <code>gdb</code> on Linux). Also notice that <code>&lt;conio.h&gt;</code> is a non-standard (Windows specific) header. Then use your debugger (and perhaps memory leak detector like <code>valgrind</code>) to hunt bugs.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263519","Text":"std::vector&lt;bool&gt; (with caveats) or dynamic_bitset","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263340","Text":"I think if you want a vector of booleans (1bit) this could be useful (if it ever worked) in some corner cases.. some very rare corner cases...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263315","Text":"Why would you want this?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263136","Text":"Ugh that was stupid. Thanks!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263079","Text":"One does not simply parse C using regexes. Nor can you parse HTML using <code>awk</code>. This didn&#39;t change recently.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263003","Text":"regexp in which language/utility ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26262925","Text":"How about this one <a href=\"http://stackoverflow.com/questions/11826016/how-to-use-regex-to-strip-the-preprocessor-directive\" title=\"how to use regex to strip the preprocessor directive\">stackoverflow.com/questions/11826016/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26262711","Text":"If you&#39;re reading directly into those structs, check the padding on the struct to make sure you&#39;re aligning the data in the file with the layout of the struct. <a href=\"http://stackoverflow.com/questions/17255104/how-can-i-read-a-bmp-file-and-access-its-header-info-via-a-struct-pointer-withou?rq=1\">See here</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26262152","Text":"The context (that is opaque pointer to struct) is stored as a class member. So it cannot be corrupted at a time the function called. To deallocate context you need to call special &quot;deallocation&quot; library function.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26262042","Text":"Could it be that the context is somehow deallocated by the time the function is called? Or maybe the context is a local variable that have gone out of scope?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261962","Text":"This function is called from another library function, so I don&#39;t allocate the buffer. <code>pkt</code> points to <code>char &#91;4096&#93;</code> buffer that is a member of some struct inside the context.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261894","Text":"How do you allocate memory for the <code>pkt</code> parameter?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261368","Text":"Can&#39;t find the real cause, can&#39;t reproduce with other host of the same system, even can&#39;t reproduce on the crime scene by writing small test program with the same float number calculation. :(","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261136","Text":"&quot;incompatible pointer to integer conversion assigning to <code>char</code>&quot;","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261070","Text":"&#39;a&#39; is a <code>char</code> &quot;a&quot; is a <code>const char*</code>. you are trying to assing a <code>char*</code> to a <code>char</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26260902","Text":"It shouldn&#39;t even compile!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259414","Text":"No, but you can create an array dynamically of given number size and use <code>array&#91;index&#93;</code> as variable.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259385","Text":"I suppose you could do something with a macro, and use another macro to reference the generated variables. Though the question, of course, is why and what!?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259309","Text":"I don&#39;t think this is possible, it sound like a job for an array.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258843","Text":"Welcome to stackoverflow, you might want to show us a little bit of code with what you are trying to do, because currently it is quite unclear what you are trying to achieve.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258795","Text":"I think use strstr can be easily than implement by yourself, strstr is standard function of C language.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258640","Text":"Why exactly to you ask? And what real code do you have? Please explain much more what you want to achieve, and what should happen at compilation time, and at run time.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258394","Text":"Full support is very hard to find.  C11 might have better luck, it deprecated some controversial C99 features from mandatory to optional.  Although you&#39;d have to wonder what the point of an optional feature in a language standard might be, still nothing you can count on when portability is important.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258378","Text":"I believe you don&#39;t understand well how the C compiler (and its preprocessing) works.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258328","Text":"@BasileStarynkevitch, I understand that, I updated the question, I hope it makes more sense now. I am want the preprocessor to replace <code>TPS</code> with some conditions in the code which can cover the entire <code>#if #endif</code> block","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258260","Text":"Notice that <code>var</code> has a value only at runtime. For the compiler, it is just a <i>name</i> of some static location containing an <code>int</code>. During <i>compilation</i>, <code>var</code> does not have any value, it has some value only at <i>runtime</i>!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258213","Text":"when does it raise? floating point underflow?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258040","Text":"It is inexact exception as defined by <code>#define FPE_FLTRES  (__SI_FAULT|6)  &#47;* floating point inexact result *&#47;</code> and can be check with gdb variable <code>$_siginfo</code>:","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257958","Text":"What exactly do you want to achieve at compilation time and at run time? Your question is not really clear, and makes me think you don&#39;t understand well the difference.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257590","Text":"One reason for not using the debugger is that the algorithm is wrong.  This is better resolved by thinking than debugging.  You have two strings, a needle and a haystack.  For each position in the haystack, you need to check whether the needle matches at the current position.  For that, you need two nested loops, not three.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257492","Text":"Isn&#39;t <code>strlen()</code> a function in the standard library?  I have to assume you&#39;re allowed the I/O functions...But maybe the requirement is not to use any of the string search functions.  The assignment <code>k=0</code> before the <code>for (k = 0; ...)</code> loop is redundant.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257485","Text":"<i>&quot;without using any function that belong to the library&quot;</i> What could possibly be the motivation for avoiding library functions explicitly designed for working with strings? If the goal is to understand how those functions work, you can investigate the source code of popular implementations, but it&#39;s arguably more important to be able to <i>use</i> them than to be able to <i>write</i> them.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257333","Text":"Why not step through the code in your debugger until you see the problem ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257320","Text":"if you knew what the problem is, you wouldn&#39;t be posting this.. so you shouldn&#39;t try to make us assume that nay part of yoru code is good.  Since you don&#39;t know what bad code looks like (otherwise you would have seen it)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257143","Text":"The inference is that your pointers are NOT initialised","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257116","Text":"Could you also show us <code>init_a()</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257084","Text":"<code>&#47;&#47;assume memory allocation and init is ok</code> If you&#39;re getting a segfault I&#39;m going to assume that&#39;s not the case.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26256910","Text":"You know how computing with 3-bit arithmetic is more expensive than computing with 32-bit arithmetic? Well it&#39;s the same with floating-point.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26256286","Text":"yes I think else every things are correct.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26256197","Text":"@GrijeshChauhan That was a really silly mistake. Thanks, it solved the problem.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255921","Text":"that allocation causes return a garbage value and after subsequent pop operations it may be a reason of undefined behavior.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255875","Text":"@GrijeshChauhan Because I want to make a reusable stack implementation. I am using <code>pointer to pointer to struct</code> for taking care that memory allocated in the function doesn&#39;t leak. The allocated memory is placed on stack. But as I said I seriously think that there is a mistake in this function. It seems that it is staring me in the face but I just couldn&#39;t place what it is.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255735","Text":"why function create allocate memory?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255472","Text":"IME, most of the major C compilers support most of C99. It&#39;s just Microsoft that refuses to support it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254745","Text":"I get the expected output with the same code. Its undefined behaviour because you are passing local  variable address. So at times it gives expected output and at times it does not. Undefined behaviour.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254685","Text":"Please supply the reasons of not using fixed-point. And what do you think about my answer?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254575","Text":"Interesting thing, the XY problem: I am actually looking to reduce floating point computation time by computing less decimal places. Do you think it is do-able ?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254510","Text":"@meaning-matters: Imagine <code>struct foo</code> and <code>struct bar</code> are members of a larger struct -- they&#39;re different pieces of a complete message.  For example, <code>foo</code> could contain a header while <code>bar</code> contains the payload, both of which need to be sent over the network together.  Or, perhaps <code>foo</code> contains game level state and <code>bar</code> contains the player state, both of which need to be saved together into the save file.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254448","Text":"Please supply these specific requirement, or we may end having an <a href=\"http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem\">XY Problem</a> here ;-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254397","Text":"I was just giving an example of the compute-time rounding I was looking for. Sorry for the confusion.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254359","Text":"no your code only has a division, from what you posted","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254339","Text":"I have all things happening there. Not just a division, I have multiplications, additions as well.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254190","Text":"Why would you pack two structures of different type???","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254092","Text":"You want a single division computation to run <i>faster?</i>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253901","Text":"Do not overlook <code>warning: function returns address of local variable</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253844","Text":"<a href=\"http://www.cplusplus.com/reference/cstring/strtok/?kw=strtok\" rel=\"nofollow\">cplusplus.com/reference/cstring/strtok/?kw=strtok</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253743","Text":"I might calculating wrong but this is only reason can happen in your code of SIGFPE, I think you can handle this exception(write a signal handler).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253585","Text":"AFAICT 919718 / 1000000000.0 (0.000920) is far from hitting underflow trap, but it might be inexact error. I&#39;m wondering how can I catch the type (overflow, underflow, divide-by-zero, etc) and any parameter of exception in gdb?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253467","Text":"try your code in some other kind of machine output may be <code>0</code> or something else but trapping on floating underflow is not normally enabled on every machine.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253292","Text":"Zheng Are you sure at time of signal fault --wait","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253235","Text":"double, 919718, as updated in question description.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253138","Text":"What is   <code>elapsed_time</code> type &amp; value?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252459","Text":"@H2CO3 nice. I&#39;m just surprised it&#39;s not a compiler warning","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252401","Text":"@TaylorFlores I&#39;ve once made a similar mistake in the GUI of an iOS app I was developing. I was surprised as to why the nicely animated menu items are moving in a strange curve on the left side of the screen but not on the right side. Fortunately, the day before I&#39;ve done this, I <b>just</b> read a quiz on C integer operations and run into this problem explained. I&#39;ve cast an unsinged integer to signed an whoa, problem solved!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252359","Text":"@H2CO3 yeah that&#39;s what I&#39;ve heard. That&#39;s all I could think of though, since it only occurred when I compiled it differently. Oh well","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252335","Text":"ProTip: it&#39;s almost never a compiler error.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252307","Text":"I don&#39;t think it&#39;s a compile error.  I think you were straying close to the limits of a signed int, and adding the parens brought the calculation back down to a better range.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251993","Text":"I&#39;m sorry but I miss your point.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251923","Text":"@xaxxon I just change the question. my problem is there any examples of dynamically link. just like the <a href=\"http://gstreamer-devel.966125.n4.nabble.com/GStreamer-C-Code-to-play-video-td3715064.html\" rel=\"nofollow\">problem</a> mention","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251692","Text":"Is there anyone that speaks better english that can help you with your question?  I can&#39;t understand what you&#39;re asking because the words don&#39;t make any sense.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251638","Text":"calling the socket you get back from accept acceptSocket is misleading.  You should call it clientSocket or something like that to show that it corresponds to a client of yours.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251601","Text":"<a href=\"http://stackoverflow.com/help/dont-ask\">stackoverflow.com/help/dont-ask</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251140","Text":"Well, only relevant link here is <a href=\"http://sourceforge.net/directory/graphics/graphics/graphics-capture/screencapture/\" rel=\"nofollow\">sourceforge.net/directory/graphics/graphics/graphics-capture/&hellip;</a> which is a search.. I tried to look for open source in C, but it&#39;s too hard to find a specific language.\nBut yes I already tried to find the source of a quick and lightweight recorder.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251050","Text":"Okay, for an alternate, how about <a href=\"https://www.google.com/search?q=open+source+screen+capture\" rel=\"nofollow\">googling &quot;open source screen capture&quot;</a>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26250991","Text":"EDIT: Sorry for wrong title, I&#39;m totally tired.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26250798","Text":"<a href=\"http://www.codeproject.com/Articles/5051/Various-methods-for-capturing-the-screen\" rel=\"nofollow\">codeproject.com/Articles/5051/&hellip;</a>\n&quot;When performance is not an issue use GDI&quot;\nBut for DirectX I think it&#39;s only for games.\nI will look the last one proposed.\nI realy wanted to know if I was missing a good method of getting the screen without storing it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26250733","Text":"What&#39;s wrong with the results you get from <a href=\"https://www.google.com/search?q=WINDOWS+SCREEN+CAPTURE+API\" rel=\"nofollow\">googling &quot;Windows screen capture api&quot;</a>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26250680","Text":"Please note: The <code>bzero()</code> function is ancient, deprecated, and in the current version of POSIX.1, not even included. Use <code>memset()</code> instead. (And if your code has <code>bcopy()</code> in it, use <code>memcpy()</code> or <code>memmove()</code> instead...) Also, your code example uses functions named <code>Socket()</code>, <code>Bind()</code>, <code>Listen()</code>, <code>Connect()</code>, and <code>Accept()</code>. Are these typos, or did you actually implement functions with those names? (Case makes a difference, you see.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26381426","Text":"@angel: Another off-by-one bug again, a bit hidden, but however some things never change ...!-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26379259","Text":"... It should have given me an <code>invalid read</code> message, though... ;)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26379239","Text":"Thanks for all your help! I finished debugging, all errors were corrected! This Valgrind was actually right... <code>positions</code> has 64 values and when the last value is popped (works like a stack) I was accessing <code>positions&#91;64&#93;</code> which is indeed un-initialized. Didn&#39;t cause a problem originally, but could have been disastrous had it not been found... Thanks again!!!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26374848","Text":"@angel: Try adding line breaks to the line in question so that every variable sits on its own line. C does not care about line breaks. Then do recompile.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26350189","Text":"Is there any way it tell me which of those variables is affected? At the moment, it only reports the line...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26345366","Text":"@angel: &quot;<i>What could be wrong?</i>&quot;: Valgrind is telling you what&#39;s wrong: <code>Conditional jump or move depends on uninitialised value(s)</code> ;-) You won&#39;t get around to keep on searching, using standard debugging technics, like cutting down the code to the bare minimum, by successivly excluding part by part of it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26345066","Text":"That&#39;s how I call it: <code>valgrind --track-origins=yes --leak-check=full --show-reachable=yes application</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26344766","Text":"@angel: You might have copied values to <code>positions</code> from a source which hadn&#39;t been properly initialised. However: Did you use the <code>--track-origins=yes</code> option?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26344582","Text":"Thanks again for introducing Valgrind! I used it and found the MAJOR error: I forgot to initialize a memory block and (indirectly) continued writing out of the allocated space...\nHowever, Valgrind still gives me another 50 errors described as: <code>Conditional jump or move depends on uninitialised value(s)</code>. Paradoxically, the conditional looks like: <code>if (i == positions&#91;j&#93;) {i++; j++;}</code> Both <code>i</code> and <code>j</code> are initialized (inside a for-loop). Array <code>positions</code> was filled before, values checked using gdb. I compiled the code without optimizations (-O0). The program works, but what could be wrong?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26336232","Text":"@haacks: many people believe what you did, and it is <i>legal</i> for that to be true, but it is not <i>required</i> for it to be true. C# is as you describe. When the increment expression is evaluated the variable is determined, the original value is determined, the new value is determined, and the variable is updated, in that order. The value of the expression is either the new or the old value, depending on whether it was postfix or prefix.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26333481","Text":".....Even after that I was not aware of <i>order of side effect</i> before reading this <a href=\"http://stackoverflow.com/a/17935062/2455888\">answer</a> of your&#39;s! Thanks for your valuable answer. I neglected this fact in my answer just because OP was interested to know only the <i>difference between <code>*y++</code> and <code>++*y</code></i>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26333472","Text":"@EricLippert; Before reading <a href=\"http://www.c-faq.com/expr/evalorder2.html\" rel=\"nofollow\">c-faq</a>,I always thought that for expressions like <code>a = b++ + c++;</code>, <i>increment is performed immediately after giving up the previous value and before any other part of the expression is evaluated</i> i.e <code>b</code> must be incremented (if <code>b++</code> is evaluating before <code>c++</code>) before the evaluation of expression <code>c++</code> always! Of course I was in dilemma. After that I came to know that the side effect will be performed (merely) sometime before the expression is considered finished. <i>[Continued....]</i>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26323269","Text":"This answer confuses the <i>values</i> that are operated on with the <i>order</i> that the side effects are produced in. C does not mandate a particular order for those side effects, so when you say &quot;value of expression is <code>*y</code> before increment, increment y later&quot;, that&#39;s misleading.  C is allowed to do the increment <i>first</i> as long as the original value has been saved somewhere.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26316450","Text":"Having now seen the correct answer, the only part of this answer that is useful is &quot;If you think the API is broken, print out the bytes.&quot;","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26305984","Text":"Thank you for such a complete answer. I had not even considered doing it this way, as you rightly stated, compared with yours, my callback.c file is a mess. I&#39;ve downloaded the code you supplied and I am going to use it as a basis for writing some much cleaner code and rethinking my callbacks. Again, thank you very much.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26298951","Text":"@EmployedRussian: I made the assumption based on a comment exchange with the OP, but I clarified my answer. Thanks.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26296727","Text":"Yes. This was indeed the issue. I have made the epoll now as level triggered. It works fine. Thanks.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26296059","Text":"why is int b; not skipped in that case?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26296001","Text":"Maybe it was being called with the wrong calling convention previously? The <code>WINAPI</code> bit makes a difference.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26295598","Text":"thanks for the answer i will read more about mmap :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26294763","Text":"indeed, that will be the appropriate place","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26294245","Text":"The OP didn&#39;t say anything about the <code>core</code> file.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26294195","Text":"The <code>sleep</code> function in the question has <i>nothing</i> to do with any <code>wakeup</code>, nor with any condition. It&#39;s a function that suspends execution for a given number of seconds.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26292778","Text":"It probably depends on the platform... On big-endian systems where byte-reversal isn&#39;t required, it could conveniently be stored as a 32-bit integer, but on little-endian systems, I guess it would depend on the implementation of <code>ntohl()</code> and friends that the implementers chose... Even if it&#39;s an unsigned int/long, though, treating it as a pointer isn&#39;t right...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26292540","Text":"Thanks.  I ended up making a separate function basically just containing the loop under the comment &quot;This loop is to count the number of elements between 0 and 9999&quot;.  This way, I would be able to find the size of a bucket (sans junk) without having to use the trim function.  Thanks again.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290434","Text":"Bawls. Seems I consulted entirely the wrong manual as it said it was a u_long - <a href=\"http://www.propox.com/download/edunet_doc/all/html/structether__arp.html\" rel=\"nofollow\">propox.com/download/edunet_doc/all/html/structether__arp.html</a>. Thanks :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290017","Text":"@Jens Thank you Jens. I will have a try later.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26290004","Text":"@AnttiHaapala Thank you for your reply. I will have a try.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289996","Text":"@P0W Thank you for your help. I will try it!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289870","Text":"@PascalCuoq so insofar as the array is a) declared in a structure, and b) declared using <code>&#91;&#93;</code> instead of <code>&#91;*&#93;</code> that works... wow that is narrow. It still constrains how you can use the parent type though significantly (hence my comment about UB &#167;6.7.2.1:21).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289695","Text":"In C11, please see 6.7.6.2:1 (esp. “If the expression is a constant expression, it shall have a value greater than zero.”) and the entirety of 6.7.6.2:4. You can definitely have FAM, which are non-optional, and not VLA, which are optional, in a C11-compliant compiler.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289540","Text":"@PascalCuoq fixed (I was actually confused about why you were going on about the zero thing). As for being optional... I think that requires clarification of the standard, you can&#39;t NOT have VLAs and have FAMs but I&#39;ll put a strike in it for now.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289485","Text":"@ScottMermelstein - But none of that stuff was used to represent characters.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289407","Text":"Your question still claims that &#167;6.10.8.3 in C11 makes flexible array members optional. It does not. There is just one page, read it. <code>foobar &#91;0&#93;</code> is not how you declare an flexible array member. <code>int foobar&#91;&#93;;</code> would be. Your recommendation for not using incomplete arrays is grounded only in your confusing them with something else.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289389","Text":"Thank you for the very clear answer and the additional examples :) Very much appreciated! For my pure C projects, I use CodeBlocks together with MinGW. When I compile the project I can actually see in the log that the compilation approach used by CodeBlocks is pretty much exactly like your examples, only with some additional options tagged on :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289203","Text":"The problem pattern for the <code>pencil</code> code is <code>ppencil</code>.  The code does not count that correctly.  It is also surprising to see only one explicit loop — that complicates the analysis.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26289157","Text":"It&#39;s curious my code is compiled on gcc, may be by the compiler but I don&#39;t know.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288936","Text":"Thanks. I&#39;m using tiny c, i add this header and now i compile and runs ok, without it it fails in runtime execution. BOOL WINAPI PlaySound(LPCSTR,HMODULE,DWORD);","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288923","Text":"“As for your comment about 0 length arrays, that depends on which draft” Arrays of size zero were never allowed in any revision of the C standard. They are not part of standard C.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288893","Text":"Incomplete array are <b>not optional</b> in C11 (again, you are confusing them with variable length arrays). Please refer to specific standard clauses instead of throwing lies around peppers with “very clear” and “many”.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288837","Text":"<b>An array with incomplete type is not array with size zero.</b>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288714","Text":"Flexible array members are a way to <b>avoid</b> undefined behavior, not a source of undefined behavior, that I know of. See <a href=\"http://blog.frama-c.com/index.php?post/2013/07/31/From-Pascal-strings-to-Python-tuples\" rel=\"nofollow\">blog.frama-c.com/index.php?post/2013/07/31/&hellip;</a> (not an independent confirmation because written by me, but my colleagues and I went to the trouble of writing a static analyzer that detects undefined behavior in Python so we&#39;re not just throwing words around either). What undefined behaviors do flexible array members have “many case of”?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288541","Text":"Your solution is working almost 100%, i&#39;ll try to understand and find the error. For example if i write:  char *haystack = &quot;pencil  pencil penciil pen penc pe pen55cil penci9llppencil55 pencillip peplic pencilrpencilpe&quot;; and  char *needle = &quot;pencil&quot;; The counter will show 5, and should be 6. Thank you very much","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288529","Text":"Strictly speaking, exposing most of the unwanted <i>types</i> may not be non-conforming, since POSIX fully reserves <code>*_t</code>. However, the headers you would need to to get the types also expose macros, functions, etc. in ways that would conflict with an application&#39;s conforming use of the same names (e.g. for static functions).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288523","Text":"I don&#39;t want the user to use the foo() function. I do want someone looking at the source to understand the method&#39;s contract though. So yes, I want to document it just before the function. Are you suggesting right before the implementation then?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288459","Text":"Updated answer to reflect your options.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288244","Text":"Fixed. And other stuff too. 5 is 5 bytes he wants.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288182","Text":"+1 for <code>memcpy</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288158","Text":"@It&#39;sPete: From your question it isn&#39;t clear whether you&#39;re calling <code>flock</code> on the serial port itself.  The linked information suggests creating files in <code>&#47;var&#47;lock&#47;</code> which are used for mutual exclusion, which is very different from what you described.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288124","Text":"Overall wisdom notwithstanding, I approve this answer and I wrote a preprocessor. The entire requirements for a directive are that it goes from a <code>#</code> or <code>%:</code> token following a newline, to just before the next newline. Whether the inside of the directive is well-formed is another matter. The other shortcoming of this approach is that it doesn&#39;t allow a comment before the <code>#</code>, but seriously who cares.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288121","Text":"@Jim I bet you didn&#39;t try compiling this :P, <code>true</code> isn&#39;t native to <code>C</code> and <code>stdio.h</code> isn&#39;t valid in <code>C++</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26288120","Text":"What&#39;s 5 here?? Why the <code>while()</code>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287880","Text":"@HotLicks You have something against <a href=\"https://en.wikipedia.org/wiki/Difference_engine\" rel=\"nofollow\">Charles&#39; gears and plates</a>?  (Or <a href=\"https://en.wikipedia.org/wiki/Analytical_Engine\" rel=\"nofollow\">cards</a>, though I just learned that none of those have have yet been built.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287734","Text":"@Mgetz 1256 is a bit long in the tooth, <a href=\"http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1570.pdf\" rel=\"nofollow\">N1570 is the last public pre-C11 draft.</a> But yes, I too avoid them like the plague.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287668","Text":"@Casey I have them (thanks for the section number) as <a href=\"http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1256.pdf\" rel=\"nofollow\">&#167;6.7.2.1p16-18</a> and it doesn&#39;t change the fact that there is a ton of UB around them.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287560","Text":"There are no VLAs in structures. There are <i>flexible array members</i>  defined in &#167;6.7.2.1p18 which are arrays of zero size.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287552","Text":"As I mentioned, I attempted to use file locks to no avail.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287428","Text":"@ElchononEdelson I probably should have said <i>will</i> be but yes, more compiler writers have chosen to implement C11 mostly because it&#39;s largely C99 (with a few sections marked optional). So GCC technically already implemented it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287353","Text":"C11 is implemented <i>more widely</i> than C99?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287147","Text":"Thanks for the quick response!  A simple enough problem, likely overlooked due to lack of sleep.  What would you suggest the best way to get both the array and size from the function would be?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286514","Text":"@EricPostpischil - If I were answering it I&#39;d probably go back to Herman&#39;s punched cards, but I&#39;m guessing everyone would be asleep by the time I finished.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286252","Text":"You need to special case horizontal/vertical lines to prevent a divide by 0.  Look at various samples on the internet for guidance here.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286076","Text":"Keep in mind <code>signed overflow</code> is undefined behavior but unsigned overflow just wraps.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286018","Text":"You&#39;ll see that I&#39;m filtering to make sure these are replies. I should also note that this is the source address, not the destination address and that the code produces 172.0.0.0 for all parsed ARP replies.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285655","Text":"On Linux, you can either define <code>_LARGEFILE_SOURCE</code> and use 64-bit versions of functions (e.g. <code>mmap64</code>) or you can define <code>_FILE_OFFSET_BITS=64</code> and use regular versions of functions.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285558","Text":"That&#39;s great, but you&#39;re talking about two different applications.  Each application is either 32-bit or 64-bit.  You can&#39;t mix.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26285366","Text":"@ElchononEdelson Understood. I forgot <code>realloc</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284965","Text":"@ElchononEdelson You&#39;re right. A good real-life example of why shadowing a variable from an enclosing scope is a bad idea; people get confused :-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284290","Text":"You&#39;re wrong about <code>*option++</code> being something that shouldn&#39;t compile. If you look closely, you&#39;ll see that at the point where <code>option</code> is being incremented, is inside the <code>addition()</code> function. In that scope, <code>option</code> is a pointer that was passed to the function.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284206","Text":"Huh, what?  Since when?  Are you talking about emulation?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284080","Text":"we can actually have a code run on 32bit machine but use 64 bit address space also :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26284078","Text":"yes I read, its good answer.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283937","Text":"No at first attemps I was confuse that why Thanks!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283931","Text":"There is not a separate 32-bit and 64-bit address space.  There is only one address space per program.  If your program is 32-bit, then that address space is 32-bit.  If your program is 64-bit, then that address space is 64-bit.  You could theoretically mix 32-bit code and 64-bit code in a 64-bit process, but I know of no platform which supports this.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283869","Text":"I read the answer given by <a href=\"http://stackoverflow.com/a/17935062/2455888\">Eric Lippert</a>. I think that is different issue.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283865","Text":"I&#39;m going to repeat this again: <b>you cannot run a 64-bit module in a 32-bit application</b>.  If you need more data than you have address space, <b>you must store the data in a database</b>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283837","Text":"then you are correct lol +1","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283805","Text":"Yes. It is correct.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283780","Text":"do you think <code>*y++</code> == <code>*(y++)</code> <b>?</b>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283764","Text":"first remove horizontal scroll..","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283706","Text":"He is asking for <code>++*y</code>, not <code>++y*</code>!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283635","Text":"It&#39;s not a bug. <code>*</code> has special in the editor. Read the faq on that. I edited to make it clear...And welcome to SO.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283592","Text":"Not a bug: read: <a href=\"http://stackoverflow.com/editing-help\">stackoverflow.com/editing-help</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283581","Text":"i will give you an example, consider a structure in 32 bits space\nwhich has a pointer which points to some location in 64 bit address space. this location may contain any amount of data, but we can access that data using the pointer. so i am talikng in similar terms","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283515","Text":"If your data does not fit in the application&#39;s address space, store your data in a database.  You can&#39;t run a 64-bit module in a 32-bit application.  (I mean, it&#39;s theoretically possible, but you can&#39;t do it.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283470","Text":"see this is a small module of a large code, so recompiling the whole code in 64 bit application is not feasible, i need some alternate solution","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283394","Text":"Forgive me if I don&#39;t understand, but if you can&#39;t recompile, then how are you supposed to add code?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283344","Text":"There is a bug in SO.  I wrote &quot;*(y++)&quot; and can clearly see it when I go to edit but yet it only displays &quot;(y++)&quot;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26283340","Text":"recompiling is not an option, i am restricted there, i need to find some other solution","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282749","Text":"If you need a dynamically-resizable block of memory, allocate it with the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/malloc.html\" rel=\"nofollow\"><code>malloc()</code></a> function, dynamically resize it with the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/realloc.html\" rel=\"nofollow\"><code>realloc()</code></a> function, and when you&#39;re done, release it with the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/free.html\" rel=\"nofollow\"><code>free()</code></a> function. Remember to check for <code>malloc()</code> returning NULL, and remember not to throw away the pointer you&#39;re passing to <code>realloc()</code> because <code>realloc()</code> can also return NULL.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282707","Text":"@learner but it&#39;s not dynamic. <code>char *joinedString = &quot;&quot;</code> declares <code>joinedString</code> as a pointer-to-char, and initializes it to point to a one-byte memory area <i>that you are not allowed to modify</i>. Randomly writing into memory that doesn&#39;t belong to you isn&#39;t dynamic except in the sense of &quot;holding a lit stick of dynamite&quot;, maybe.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282339","Text":"@ScottMermelstein: The note at the end suffices. It is enough so that people who find themselves in a situation where it matters have that alternative at the back of their heads. (When trying to solve a problem, it is hard to question an assumption you do not know is an assumption, which is why I emphasize not glossing over things like this.) Were I writing an answer from scratch, I would discuss encoding characters without emphasizing ASCII. But if I tried to change an existing answer, I would be tempted to edit too much.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26282056","Text":"@EricPostpischil I agree, there should be mention of character coding.  I&#39;ve tried to add a note at the end, but am not thrilled with what I&#39;ve put.  If you can phrase it better than I, please edit my answer.  I&#39;ll welcome the improvement.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281931","Text":"after correcting dx,dy to float its working for some but there is a problem for eg. if am taking (200,0) and (0,200) the line drawn is not right.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281807","Text":"Thank you for the answer and for confirming that exposing unwanted types would be non-conforming. I originally liked the idea to have one header per-type, as I think it may improves readability compared to the macro solution. That being said, I really like the way you do in musl, as all types are defined in one standard place, and as the macro stuff is hidden. So I think I&#39;ll give it a try! : )","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281792","Text":"Thanks. It solved my problem","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281725","Text":"@EricPostpischil - This is true, but to delve into that issue would only add complication at this point in the discussion.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26281662","Text":"oh sorry..its typing mistake. i have written correctly in actual code.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26280521","Text":"Thanks for the very interesting reason to use <code>&quot;%s&quot;, &quot;string to file&quot;</code> vs. <code>&quot;string to file&quot;</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26280003","Text":"@angel: You will love it, and will never test/debug without it anymore ...","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279936","Text":"Thank you!!! I&#39;ll give it a try and post my progress! :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279890","Text":"@angel: I&#39;m not using Ubuntu, but it&#39;s available for Debian, so the Ubuntu rep should provide it.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279835","Text":"Is it available in the Ubuntu repositories or am I asking for too much?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279736","Text":"Valgrind observes your program by running it in a sandbox. Tomorrow you might like to read here: <a href=\"http://valgrind.org/docs/manual/QuickStart.html\" rel=\"nofollow\">valgrind.org/docs/manual/QuickStart.html</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279643","Text":"Could you elaborate on valgrind?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279134","Text":"@HotLicks I see where you&#39;re coming from, but it seems like the asker would want to know that an all-<code>0</code> byte is <code>\\0</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26279007","Text":"I thought exactly what you said. And I thought too would be possible to avoid another loops. I need to live with this penalty.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278874","Text":"My intention with this is to get a dynamic char*. For me doing this and using strcat char* would be dynamic.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278841","Text":"You must define SOME maximum length, for the sake of simplicity. You MAY dynamically calculate that based on the length of the inputs, but it would require a second loop through your varargs. Simply define a new <code>int len = 0</code>, add up the lengths of all the arguments, and add 3 (for the trailing <code>&quot;\\r\\n\\0&quot;</code>), then call <code>malloc</code> based on that variable. Like I said, you can&#39;t do this on the fly, you have to loop through the args to get each length, THEN call <code>malloc</code>, THEN loop through the args again to actually <code>strcpy</code> them.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278714","Text":"Exactly Dan. My intention with this is to get a variable char*. Isolating this function in a separate program it crashes. Making your suggestions works. But like I said my intention is to get all strings that can be passed and to join them in this char pointer. Because of this I did&#39;nt define a fixed size for char and allocate it. Is this a clean way to do variable char*?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278616","Text":"knick-knacks are like small ornements or toys, etc. <a href=\"http://www.thefreedictionary.com/_/dict.aspx?rd=1&amp;word=knick-knack\" rel=\"nofollow\">thefreedictionary.com/_/dict.aspx?rd=1&amp;word=knick-knack</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278358","Text":"I&#39;ll look into fputs, and probably suggest that we switch to that.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26278062","Text":"Okay I added that check back in and it stopped the SIGSEGV fault, but now I&#39;m getting an NZEC error :/ Thanks again!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277624","Text":"Yes, because if your variable contains something like a %s, you are screwed with the latter.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277621","Text":"I commented it out to ensure that, that wasn&#39;t causing the submission error, but normally I would use that check in there if I was writing it in a real-world example. Okay, so I need to ensure everything is being written/read correctly, I&#39;ll try that and get back to you","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277571","Text":"Please don&#39;t confuse things with <code>&#39;\\0&#39;</code>.  The difference between <code>0</code> and <code>&#39;0&#39;</code> is hard enough to follow.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277361","Text":"You also need to track the length of joinedString - you&#39;ll set a maximum length in the call to <code>malloc</code> and then you need to track the maximum length. Use <code>strncat</code> to make sure that you never exceed the allocated string length.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277227","Text":"temp-&gt;link=header-&gt;link;\ntemp-&gt;data=x;\nheader-&gt;link=temp;","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26277111","Text":"Finally got the solution :","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26276467","Text":"@nullpointer: If you are asking about using <code>uint64_t</code> and <code>uint32_t</code> in this <code>rdtsc</code> and timing code when building for different platforms, then, yes, you should seek to use these types, as long as they do not run into compiler issues (e.g., the use of <code>asm</code> and its operand constraints may be finicky).","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26275287","Text":"I&#39;m glad it&#39;s helped - please consider up-voting and/or accepting the answer. I&#39;ve edited it to add an example on the last part which I assume is what you didn&#39;t understand.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274946","Text":"thank you so much, it&#39;s resolved my problem :). i don&#39;t understand your mind, what does it mean? can you give example for it?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274541","Text":"can I use <code>uint64_t</code> and <code>uint32_t</code> also for windows, lets say mingw and visual?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273993","Text":"yes,,,,,,,,,,,,","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273941","Text":"thanks, this worked: <a href=\"http://pastie.org/private/7n1q6ccagthqo70bvhmcq\" rel=\"nofollow\">pastie.org/private/7n1q6ccagthqo70bvhmcq</a> (hope its finally ok now?). Also, another question. Finally I have non-negative results, take a look: <a href=\"http://pastie.org/private/4c9taxfaljgft5spbyv3nq\" rel=\"nofollow\">pastie.org/private/4c9taxfaljgft5spbyv3nq</a>. Is everything ok now with variables types?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273854","Text":"need      while , its loop","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273730","Text":"i want compute the first 100 prime numbers","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26273628","Text":"fix, it C,,,,,,,","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272374","Text":"@DrewMcGowen Thanks corrected check again! I said you beat me normally  :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272286","Text":"In that case, it should be <code>n &lt; MAX</code>, since <code>n</code> could be passed in as non-zero to the function.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272260","Text":"@DrewMcGowen <code>n</code> is used that is incremented on each iteration","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26272215","Text":"<code>c</code> is not used as an index (could be a typo in OP&#39;s code though)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26271415","Text":"@HaseebAhmadBasil, for now, it is easiest if you download <a href=\"http://cygwin.com/setup-x86.exe\" rel=\"nofollow\">cygwin.com/setup-x86.exe</a> and from within the installer select next, next, until you come to a list of software to select. Expand &quot;devel&quot; and select at least &quot;gcc-g++&quot; and &quot;make&quot;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26270955","Text":"can you tell me from where can I download the GCC compiler I have been looking for it but all i found was mirrors but I can&#39;t understand what to download","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269834","Text":"@user2621292 You need to have an <code>extern</code> declaration in the second file. See the first two answers to this question on how that looks like: <a href=\"http://stackoverflow.com/questions/3071890/external-delaration-for-an-array\" title=\"external delaration for an array\">stackoverflow.com/questions/3071890/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269569","Text":"Thank you, it worked! Lets say I want to access the option[] from the second file, how do I access it?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26269197","Text":"@nullpointer: This works for me: <code>uint64_t lo, hi; __asm__(&quot;rdtsc&quot; : &quot;=a&quot; (lo), &quot;=d&quot; (hi)); return hi &lt;&lt; 32 | lo;</code> when compiling for <code>-arch x86_64</code>. If you are compiling for <code>-arch i386</code>, then you may need to make <code>lo</code> and <code>hi</code> 32-bit integers (<code>uint32_t</code>) and use <code>return (uint64_t) hi &lt;&lt; 32 | lo;</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268922","Text":"@DanielDaranas, AnttiHaapala: The correct term is &quot;modifiable lvalue&quot;. I corrected the answer. Other than that, the code is not valid. A warning is not enough; the code should actually not compile at all.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268684","Text":"I get: <code>error: impossible register constraint in ‘asm’</code> when I changed it to <code>uint64_t</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268628","Text":"@DanielDaranas because the effect of expression <code>*option ++;</code> is just <code>option++;</code>, an lhs variable missing. its should be like:  <code>x = *option ++;</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268613","Text":"You are incorrect in the latter part of the answer: the option is an lvalue. Even if called with int value[] syntax, it is an lvalue.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268584","Text":"It <i>is</i> valid. It is the same as <code>*(option ++);</code>. And the compiler already gave a warning, suspecting that something was not right.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268551","Text":"@GrijeshChauhan Hehe... Indeed :-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268494","Text":"you beaten me twice :) on pointers","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266902","Text":"Thank you this actually worked, I wonder why?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266358","Text":"Every number is off by 1. Using <code>for(int i=1;sum&lt;n;i+=2)</code> instead I get correct values for square numbers and rounded upwards for the rest.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266164","Text":"<code>for (int i…</code> is a C99 feature, and in C99, one should declare the types of <code>n</code>, <code>count</code> and the return type of <code>Sq_root</code> explicitly.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26265025","Text":"That&#39;s not working. Some directives don&#39;t need anything to follow, and there&#39;s even the empty directive just consisting of &#39;#&#39;. Then, #import and #using are not C directives.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264547","Text":"I will keep that in mind. Thank you. :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264481","Text":"What is a knick-knack? I looked on [Wikipedia](en.wikipedia.org/wiki/Knick_Knack) bit it seems unrelated.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264342","Text":"@user2624491 Even with a single link list, having a pointer to the tail is useful, especially if you only insert at the end like you do. :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264300","Text":"Ahh! yes, now I understand. Thank you. :)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264262","Text":"I tried double link, but everything went into shambles. So I thought I should understand the single link first before I can ever understand the double. I am new at this taking things slowly :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264230","Text":"When you loop like this : while(temp!=NULL) , you&#39;ll stop when you reach a NULL pointer.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264166","Text":"This works just great. But I am still confused which part I worked with a NULL pointer. I am sorry if it sounds dumb, I am really a beginner at linkedList.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263354","Text":"@AnttiHaapala updated, thanks","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263309","Text":"can have space after #","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26371335","Text":"Note the requirement &#39;without using any function that belong[s] to the library&#39;.  Obviously, the I/O functions are from &#39;the library&#39;; we can reasonably interpret it as &#39;no string manipulation functions from the library&#39;.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26293639","Text":"Please can you elaborate more detailed how to do it? I&#39;m failing it for all my projects. I tried in the BSP editor to change stdoutto uart_0, uart_1 and uart2 but neither gave any result on the board. I use the Nios 2 IDE v13 from Altera and I&#39;m trying the example projects that I can compile and run but I fail to run them as hardware. Could you please be more specific how I should go about? I use the Altera DE2.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26287016","Text":"More likely, what is stored is one byte of the value of the address, or some other garbage value resulting from the conversion of a pointer (likely a 4-byte or 8-byte value) into a <code>char</code> (one byte.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26286955","Text":"@UchiaItachi Incorrect. String literals do not have <code>const</code> type in C.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26274197","Text":"Right hand side that is the C style string is of <code>const char*</code> type","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26268869","Text":"the structure will be having data tyes like int long pointers etc","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266288","Text":"Thanks for the advice :D","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26266270","Text":"That&#39;s almost perfect for my needs, thank you so much for your help!","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264674","Text":"@boffin Ah, known problem ;-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264200","Text":"I would recommend using the DWork vector to store the structs - if you just allocate memory in a block, I&#39;m not sure how Simulink will deal with / respect it.  The documentation recommends the DWork vector to store anything that you want to persist between successive calls to the model.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264071","Text":"My best (educated) guess, given the available info. Until OP clarifies, not much more to go on.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26264003","Text":"writing to a workspace variable / reading from a workspace variable is one mechanism to pass the addresses.  I guess you could pass them as data inputs too...although they won&#39;t change over the length of the simulation, it seems a bit strange to pass the same value on every simulation tick","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263875","Text":"yes I think they use the same memory space, the problem is finding a nice mechanism to pass addresses between them. Passing them as parameters will be difficult - Simulink expects the parameters for all s-functions to be set up before starting","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263653","Text":"Thanks. I&#39;ll give it a try. But first: do all S-functions from one Simulink model share the memory? Could I simply instantiate a struct in a block and pass its address as an input (or parameter) to the other blocks (also S-functions but different than the one holding the struct)?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263377","Text":"what makes you think this question is about a 32-/64-bit <i>architecture</i>?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26263019","Text":"Just thought of this: &#39;any individual character can be escaped by prepending a \\&#39; only works <i>outside</i> of &quot;..&quot; and &#39;..&#39; quoted strings. To make it also escape inside strings it needs a bit more code. Personally, I&#39;m also partial to the alternative method <code>&quot;..&quot;&quot;..&quot;</code> -- double-up to get a single one.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26262553","Text":"Thanks for your answer. I&#39;ll check for stack size. <code>pkt</code> points to the same memory as <code>char *p</code> where <code>p = (char *)&amp;context-&gt;service_buffer&#91;0&#93;;</code> and <code>service_buffer</code> is <code>unsigned char service_buffer&#91;4096&#93;</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26261940","Text":"Both HP and IBM claim full support, iirc.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26260430","Text":"case of A:&quot;howhowhow&quot; B:&quot;howhow&quot; , count 1. shoud be 2?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259562","Text":"<a href=\"http://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc/605858#605858\" title=\"do i cast the result of malloc\">stackoverflow.com/questions/605845/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259486","Text":"In C, do NOT cast the return value from <code>malloc()</code>!! I mean it, don&#39;t make come over there and slap you around :-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26259370","Text":"Well, some symbols are usually exported... in hosted environments","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258158","Text":"@user13107 You&#39;re welcome. In &quot;nice and productive&quot; scripting languages, such as Perl, speed is generally not the greatest concern :) (Not that it should be unless benchmarked - premature optimization is evil.) -- If you create a tight loop with a regex match inside and another one with a simple string comparison, I dare you the first one will run slower.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258122","Text":"Thanks. Coming from Perl I found it surprising that a regex compilation is expensive.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258105","Text":"@acheong87 Thanks! Yes, although from a control freak point of view (i. e. &quot;in first place, I completely disregard efficiency and focus on ease of use instead&quot;), I don&#39;t find it too good that e. g. the POSIX <code>&lt;regex.h&gt;</code> API doesn&#39;t provide a convenience one-step interface. It&#39;s really useful if you know you will use the regex only once. -- Also, we can notice this compilation-and-execution pattern in SQL engines too (<code>sqlite3_prepare()</code>, for example, serves for the same purpose.)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26258055","Text":"+1 - Yup, and compiled regular expressions aren&#39;t unique to C; you can (or must, or implicitly) do the same in, AFAIK, Java, C#, Python, even Javascript, although many of these allow you to (inefficiently, in cases as described by @H2CO3) run a match without compiling, too.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257927","Text":"@tarun27sh as said in other answers, that&#39;s not possible because of the nature of the preprocessor. The preprocessor runs at <b>compile</b> time, you want to do stuff at <b>runtime</b>. Use a normal <code>if</code> for that.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257911","Text":"Anything, if it can check my variable and then be <code>TRUE</code> or <code>FALSE</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257887","Text":"No, I want the value <code>#define TPS</code> to be dependent on the variable <code>var</code>.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257828","Text":"@tarun27sh Are you looking for the <code>#if</code>, <code>#ifdef</code>, <code>#else</code>, <code>#endif</code>, etc. preprocessor directives?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257810","Text":"Ok.. I think I should rephrase it, I am looking for something like a conditional something like:\n<code>#define TPS do{some condition that checks the value &amp; enables my macro}while(0)</code>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257639","Text":"@GrijeshChauhan Updated. Thanks for pointing out.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26257517","Text":"correct, add a code for free() also, because OP may have memory-leak in his code.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255716","Text":"There is a lot more info required to be shared, than I am allowed to... rules !! sorry :-(","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255681","Text":"@boffin Thanks! It may help to tell why you can&#39;t use fixed-point ;-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255629","Text":"Well, I would like to hear more people tell me their experiences :-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255431","Text":"Doesn&#39;t Intel support C99 as well?","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255275","Text":"@JensGustedt I modified my words, when talking aoubt C99, I ignored Micorsoft by default. By the way, it seems that Micosoft <b>finally</b> decided to add some C99 features to Visual Studio 2013. <a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/06/28/c-11-14-stl-features-fixes-and-breaking-changes-in-vs-2013.aspx\" rel=\"nofollow\">blogs.msdn.com/b/vcblog/archive/2013/06/28/&hellip;</a>","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26255078","Text":"This is certainly not a question of &quot;hard to implement&quot;. Some compiler vendors (notably microsoft) simply don&#39;t want it for political reasons.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26254875","Text":"Thanks for your answer.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26253671","Text":"Metanitpic: signed and unsigned division by a constant 2 are shift operations that differ only by a sign extension bit. :)  But yes: general division is indeed a different machine instruction for unsigned logic.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252360","Text":"Nitpick - signed division is a different operation from unsigned division. They don&#39;t differ by a sign extension.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26252334","Text":"ahh, you&#39;re right.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251658","Text":"or in his case, just make it non-blocking, and everything should be fine.  I wouldn&#39;t involve threads at all.","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26251621","Text":"Thanks, understood perfectly! :-)","Language":"c"},{"DataSource":"stackoverflow.com","CommentId":"26250600","Text":"I love it when my problems are simple ones.  Thank you!","Language":"c"}]