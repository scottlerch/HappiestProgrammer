{"DataSource":"stackoverflow.com","CommentId":"26314598","Text":"Probably you should write to the author of the program you are trying to decompile and kindly ask for the sources. This seems like a lot easier and in most cases legal way of obtaining the source code.","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26310853","Text":"edit: fixed math problems","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26310851","Text":"Ok, I&#39;m going to try and implement it today, it&#39;s all making sense to me at least =p","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26310610","Text":"&quot;Also guessing there would have to be a proportionality constant somewhere there&quot; - yeah, here it&#39;s pretty linear; how you calculate the final <code>animTime</code> depends on the effect you want. Check out easing equations or log functions (not my area of expertise, sorry)","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26310453","Text":"I wrote it out of my head, so there may be bugs in it :D\nYou can probably get rid of the <code>animFPS</code> variable; it&#39;s only there to calculate <code>animTime</code>, which is the amount of ms to spend on each frame. Basically, as <code>speed</code> goes up, <code>animTime</code> should be lower and lower, so something like <code>var animTime = 1000 &#47; Math.abs( this.speed );</code>","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26282821","Text":"Tobias provided the answer I would have, but as an aside, anytime you call <code>Graphics#beginFill()</code>, you should also call <code>Graphics#endFill()</code> after drawing your shape. It will prevent headaches and it is the proper method for drawing in Flash (basic OOP principle: you start something, so you must end it as well)","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26274782","Text":"What happens? Do you get the traces? Or does the click event not work?","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26273320","Text":"We do not write code on demand! What we do is helping you doing it yourself. So please rewrite your questions and show us what you have tried so far for every single step.","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26267505","Text":"but thanks again, this is a great response","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26267498","Text":"wow this is awesome! The only other thing maybe you can look at again is the this.animFPS part. To me it looks like the faster we go, the slower the animFPS is going to be, since you have them inversely proportional. To me it looks like it should just be Math.abs(this.speed), but maybe I&#39;m missing something? Also guessing there would have to be a proportionality constant somewhere there as well?","Language":"actionscript"}
{"DataSource":"stackoverflow.com","CommentId":"26267120","Text":"edit: I added a <code>Math.abs()</code> around the <code>animFPS</code> calculation as <code>speed</code> can go below 0","Language":"actionscript"}